{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"receiver","type":{"events":[],"methods":[]}},"2":{"name":"databank","type":{"events":[],"methods":[]}},"3":{"name":"emitter","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"--screen.mouseUp( *, *)\n sgui:process(x,y)\n button_press(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseUp(x,y)","slotKey":"0"},"key":"0"},{"code":"--receiver.receiver(*)\n local ShipReqstId = string.find(message, \"<ShipReqstId>\")\n local ShipRqst = string.find(message, \"<ShipRqst>\")\n local ShipData = string.find(message, \"<ShipData>\")\n\n if ShipReqstId then\n  ship_id_rqst = string.gsub(message, \"<ShipReqstId>\", \"\")\n  timer_delay = 1\n  timer_id = \"<BaseShipId>\"\n  unit.setTimer(\"Delay_Emitter\", 1)\n end\n\n if ShipRqst then \n  timer_delay = 1\n  timer_id = \"init_sending\"\n  unit.setTimer(\"Delay_Emitter\", 1)\n end\n\n if ShipData then\n  msg_counter = msg_counter + 1\n  system.print(\"RECEIVED \"..msg_counter)\n  msg_received = true\n  rcv_msg = message:gsub(\"@@@\",\"\\\"\")\n  rcv_msg = string.gsub(rcv_msg, \"<ShipData>\", \"\")\n  rcv_msg = json.decode(rcv_msg)\n  screen_html()\n end","filter":{"args":[{"variable":"*"}],"signature":"receive(message)","slotKey":"1"},"key":"1"},{"code":"--[[\n\nAuthor: Aviator1280\n\n--]]\n\n--unit.Start()\n --STARTING SCREEN\n  screen.activate()\n  screen.setHTML(\"\")\n  screen.clear()\n\n --STARTING VARIABLES\n  entry_number = {}\n  keypad_input_clr_wp = \"\"\n  msg_received = false\n  msg_counter = 0\n  wp_rceived = 0\n  scrool_y = 0\n  rcv_msg_html = \"\"\n  sent_msg_html = \"\"\n  databank_keys = databank.getNbKeys()\n  new_databank_keys = databank_keys\n\n --DATABANK CLEANING\n  function databank_clean()\n   local store_db_wp = {}\n   local db = json.decode(databank.getKeys())\n   local dbn = databank.getNbKeys()\n   local counter = 0\n   for i=1, dbn do\n    local key = db[i]\n    local value = databank.getStringValue(key)\n    if (value ~= \"\") then\n     counter = counter +1\n     store_db_wp[counter] = {[\"key\"] = key, [\"value\"] = value}\n    end\n   end\n\n   databank.clear()\n\n   for i=1, #store_db_wp do\n    databank.setStringValue(store_db_wp[i].key, store_db_wp[i].value)\n   end\n  end\n\n --RESTORING TABLE\n  function restoring_table()\n\n   if new_databank_keys > 0 then\n    new_databank_keys = 0\n    local stored_wp = json.decode(databank.getKeys())\n    for i, databank_keys in pairs(stored_wp) do\n     local wp_name = stored_wp[i]\n     local wp_coord = databank.getStringValue(wp_name)\n     if wp_coord ~= \"\" then\n      new_databank_keys = new_databank_keys + 1\n      entry_number[new_databank_keys] = wp_name\n     end\n    end\n    table.sort(entry_number)\n\n    for i, v in pairs(entry_number) do\n     local wp_name = v\n     local wp_coord = databank.getStringValue(wp_name)\n     rcv_msg_html = rcv_msg_html..[[<tr><td width=\"50vw\" class=\"bd cyan\">]]..i..[[</td><td width=\"250vw\" class=\"bd cyan\">]]..wp_name..[[</td><td class=\"px13 bd cyan\">]]..wp_coord..[[</td></tr>]]\n    end\n   else\n    rcv_msg_html = [[<tr><td colspan=\"2\"> ... </td><td width=\"400vw\"> ... </td></tr>]]\n   end\n  end\n  restoring_table()\n\n --ADD LINES TO HTML AND STORE DATAS\n  function add_tr()\n\n   if rcv_msg_html == [[<tr><td colspan=\"2\"> ... </td><td width=\"400vw\"> ... </td></tr>]] then\n    rcv_msg_html = \"\"\n   else\n    rcv_msg_html = rcv_msg_html\n   end\n\n   local index = rcv_msg.wp_n\n   local key = rcv_msg.wp_c\n   databank.setStringValue(index, key)\n\n   rcv_msg_td_index = index\n   rcv_msg_td_key = key\n   rcv_msg_html = rcv_msg_html..[[<tr><td width=\"50vw\" class=\"bd\">]]..msg_counter..[[</td><td width=\"250vw\" class=\"bd\">]]..rcv_msg_td_index..[[</td><td class=\"px13 bd\">]]..rcv_msg_td_key..[[</td></tr>]]\n\n   databank_keys = databank.getNbKeys()\n   unit.setTimer(\"table_refresh\", 5)\n   return rcv_msg_html\n  end\n\n --HTML BUTTONS\n  function buttons_html()\n   local html = [[\n    <table>\n     <tr height=\"50vh\"><td width=\"50vw\" class=\"bd\">1</td><td width=\"50vw\" class=\"bd\">2</td><td width=\"50vw\" class=\"bd\">3</td><td width=\"15vw\" rowspan=\"11\" class=\"nobd\"></td><td width=\"50vw\" class=\"bd\">UP</td><td width=\"15vw\" rowspan=\"11\" class=\"nobd\"></td><td class=\"cyanbd\" width=\"100vw\">]]..keypad_input_clr_wp..[[</td></tr>\n     <tr height=\"50vh\"><td class=\"bd\">4</td><td class=\"bd\">5</td><td class=\"bd\">6</td><td rowspan=\"3\" class=\"bd\"></td><td class=\"clr\" width=\"100vw\">CLEAR</td></tr>\n     <tr height=\"50vh\"><td class=\"bd\">7</td><td class=\"bd\">8</td><td class=\"bd\">9</td><td rowspan=\"9\"></td></tr>\n     <tr height=\"50vh\"><td class=\"bd\">0</td><td colspan=\"2\" class=\"bd\">CLR</td></tr>\n     <tr height=\"50vh\"><td rowspan=\"7\" colspan=\"3\" ></td><td class=\"bd\">TOP</td></tr>\n     <tr height=\"150vh\"><td class=\"bd\"></td></tr>\n     <tr height=\"50vh\"><td class=\"bd\">DWN</td></tr>\n     <tr height=\"25vh\"><td ></td></tr>\n     <tr height=\"50vh\"><td class=\"send\">SEND</td></tr>\n     <tr height=\"25vh\"><td ></td></tr>\n     <tr height=\"50vh\"><td class=\"clr\">CLR DB</td></tr>\n    </table>]]\n    html_buttons = screen.addContent(65,0,html)\n   return html_html_buttons\n  end\n\n --HTML DATA TABLE\n  function screen_html()\n   screen.clear()\n   buttons_html()\n\n   if msg_received == true then\n    add_table_lines = add_tr()\n   else\n    add_table_lines = rcv_msg_html\n   end\n\n   databank_keys = databank.getNbKeys()\n\n   local html = [[\n   <style>\n   table {border-spacing: 0px; border-collapse: separate;}\n   td {color:yellow; font-family: Arial !important; font-size:30px; text-align:center;}\n   .left {text-align:left;}\n   .mid {vertical-align:middle;}\n   .bd {border:2px solid yellow;}\n   .nobd {border:0px solid black !important;}\n   .clr {border:2px solid red !important; color:red; font-size:20px; text-align:center;}\n   .cyanbd {border:2px solid aqua;}\n   .green {color: green;}\n   .cyan {color: aqua;}\n   .send {border:2px solid green !important; color:green; font-size:20px; text-align:center;}\n   .px13 {font-size:13px;}\n   </style>\n   <table width=\"600vw\">\n    <tr><td colspan=\"2\" class=\"bd\">WP Stored</td><td class=\"bd center\">]]..new_databank_keys..[[</td></tr>\n    ]]..add_table_lines..[[\n    ]]..sent_msg_html..[[\n    <tr><td colspan=\"2\" class=\"bd\">WP Received</td><td class=\"bd center\">]]..msg_counter..[[</td></tr>\n    <tr><td colspan=\"2\" class=\"bd\">Keys Stored</td><td class=\"bd center\">]]..databank_keys..[[</td></tr>\n   </table>]]\n   msg_received = false\n   html_table = screen.addContent(0,scrool_y,html)\n   return html_table\n  end\n  screen_html()\n\n --WP LIST TABLE\n  function wp_list_table_gen()\n   wp_list_table = {}\n   wp_list_table = json.decode(databank.getKeys())\n   table.sort(wp_list_table)\n   return wp_list_table\n  end\n  wp_list_table_gen()\n\n --INIT SENDING\n  function init_sending()\n   wp_synced = 0\n   index_sync = 1\n   cycle = 0\n   total_key_number = new_databank_keys\n   emitter.broadcast(\"<BaseData_n>\"..total_key_number)\n   total_key_number = databank_keys\n   timer_delay = 1\n   timer_id = \"sync_data\"\n   unit.setTimer(\"Delay_Emitter\", 0.5)\n  end\n\n --SENDING DATA\n  function sync_data()\n   if total_key_number >= cycle then\n    local extract_name = wp_list_table[index_sync]\n    local extract_coord = databank.getStringValue(extract_name)\n\n    --system.print(\"TRANSMITTING \"..index_sync..\" : \"..extract_name..\", \"..extract_coord)\n\n    if extract_coord ~= \"\" then\n     waypoint = {wp_n = extract_name, wp_c = extract_coord}\n     local json_string = json.encode(waypoint, { indent = false })\n     emitter.broadcast(\"<BaseData>\"..json_string:gsub(\"\\\"\",\"@@@\"))\n     wp_synced = wp_synced + 1\n     sync_result = \"Synced \"..wp_synced..\" WP\"\n     prog_bar = (wp_synced * 295)/new_databank_keys\n     sent_msg_html = [[\n      <tr><td colspan=\"2\" class=\"bd\">]]..sync_result..[[</td><td width=\"300vw\" class=\"bd left mid\">\n       <svg width=\"]]..prog_bar..[[\" height=\"10\"><rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" style=\" fill: yellow\"/></svg>\n      </td></tr>]]\n    end\n\n    cycle = cycle + 1\n    index_sync = index_sync + 1\n    screen_html()\n    timer_delay = 1\n    timer_id = \"sync_data\"\n    unit.setTimer(\"Delay_Emitter\", 0.5)\n   else\n    screen_html()\n   end\n  end\n\n --ADD DIGITS\n  function insert_keys(new_digit)\n   keypad_input = keypad_input_clr_wp\n   keypad_input_clr_wp = add_digit(new_digit, keypad_input)\n  end\n\n  function add_digit(new_digit, keypad_input)\n   if keypad_input then\n    return tostring(keypad_input) .. tostring(new_digit)\n   else\n    return new_digit\n   end\n  end\n\n --BUTTON PRESS\n  function button_press(x, y)\n   if (x > 0.65 and x < 0.70 and y > 0 and y < 0.07) then --1\n    local new_digit = 1\n    insert_keys(new_digit)\n   elseif (x > 0.70 and x < 0.75 and y > 0 and y < 0.07) then --2\n    local new_digit = 2\n    insert_keys(new_digit)\n   elseif (x > 0.70 and x < 0.79 and y > 0 and y < 0.07) then --3\n    local new_digit = 3\n    insert_keys(new_digit)\n   elseif (x > 0.65 and x < 0.70 and y > 0.07 and y < 0.15) then --4\n    local new_digit = 4\n    insert_keys(new_digit)\n   elseif (x > 0.70 and x < 0.75 and y > 0.07 and y < 0.15) then --5\n    local new_digit = 5\n    insert_keys(new_digit)\n   elseif (x > 0.75 and x < 0.79 and y > 0.07 and y < 0.15) then --6\n    local new_digit = 6\n    insert_keys(new_digit)\n   elseif (x > 0.65 and x < 0.70 and y > 0.15 and y < 0.23) then --7\n    local new_digit = 7\n    insert_keys(new_digit)\n   elseif (x > 0.70 and x < 0.75 and y > 0.15 and y < 0.23) then --8\n    local new_digit = 8\n    insert_keys(new_digit)\n   elseif (x > 0.75 and x < 0.79 and y > 0.15 and y < 0.23) then --9\n    local new_digit = 9\n    insert_keys(new_digit)\n   elseif (x > 0.65 and x < 0.70 and y > 0.23 and y < 0.32) then --0\n    local new_digit = 0\n    insert_keys(new_digit)\n   elseif (x > 0.70 and x < 0.79 and y > 0.23 and y < 0.32) then --CLR Entry\n    keypad_input_clr_wp = \"\"\n   elseif (x > 0.91 and x < 1.00 and y > 0.07 and y < 0.15) then --CLR WP\n    if (tonumber(keypad_input_clr_wp) ~= nil and keypad_input_clr_wp ~= \"\") then\n     local key_name = entry_number[tonumber(keypad_input_clr_wp)]\n     databank.setStringValue(key_name, \"\")\n     entry_number[tonumber(keypad_input_clr_wp)] = \"\"\n     new_databank_keys = new_databank_keys - 1\n     keypad_input_clr_wp = \"\"\n     rcv_msg_html = \"\"\n     entry_number = {}\n     databank_clean()\n     restoring_table()\n     screen_html()\n    else\n     rcv_msg_html = \"\"\n     entry_number = {}\n     databank_clean()\n     restoring_table()\n     screen_html()\n    end\n   elseif (x > 0.81 and x < 0.89 and y > 0 and y < 0.07) then --UP\n   if scrool_y < 0 then\n     scrool_y = scrool_y + 5\n    end\n   elseif (x > 0.81 and x < 0.89 and y > 0.32 and y < 0.40) then --TOP\n    scrool_y = 0\n   elseif (x > 0.81 and x < 0.89 and y > 0.65 and y < 0.73) then --DWN\n    scrool_y = scrool_y - 5\n   elseif (x > 0.81 and x < 0.89 and y > 0.77 and y < 0.85) then --SEND\n    emitter.broadcast(\"<To All Ships>\")\n    timer_delay = 1\n    timer_id = \"init_sending\"\n    unit.setTimer(\"Delay_Emitter\", 0.5)\n   elseif (x > 0.81 and x < 0.89 and y > 0.89 and y < 0.97) then --CLR DB\n    databank.clear()\n    msg_counter = 0\n    databank_keys = 0\n    new_databank_keys = databank_keys\n    scrool_y = 0\n    sent_msg_html = \"\"\n    rcv_msg_html = [[<tr><td colspan=\"2\" class=\"bd\"> ... </td><td width=\"400vw\" class=\"bd\"> ... </td></tr>]]\n   end\n  screen_html()\n  end","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"2"},{"code":"--unit.Stop()\n screen.clear()\n screen.setCenteredText(\"WP Sync\")","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"3"},{"code":"--unit.tick(\"table_refresh\")\n databank_keys = databank.getNbKeys()\n new_databank_keys = databank_keys\n rcv_msg_html = \"\"\n restoring_table()\n screen_html()\n unit.stopTimer(\"table_refresh\")","filter":{"args":[{"value":"table_refresh"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"4"},{"code":"--unit.tick(\"Delay_Emitter\")\n timer_delay = timer_delay - 1\n if timer_delay == 0 then\n  unit.stopTimer(\"Delay_Emitter\")\n  if timer_id == \"<BaseShipId>\" then emitter.broadcast(\"<BaseShipId>\"..ship_id_rqst) end\n  if timer_id == \"sync_data\" then sync_data() end\n  if timer_id == \"init_sending\" then init_sending() end\n end","filter":{"args":[{"value":"Delay_Emitter"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"5"}],"methods":[],"events":[]}