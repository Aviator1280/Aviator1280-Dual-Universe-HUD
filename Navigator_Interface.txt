{"slots":{"0":{"name":"screen","type":{"events":[],"methods":[]}},"1":{"name":"databank","type":{"events":[],"methods":[]}},"2":{"name":"core","type":{"events":[],"methods":[]}},"3":{"name":"receiver","type":{"events":[],"methods":[]}},"4":{"name":"emitter","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"sgui:process(x,y)\nbutton_press(x, y)\n--system.print('mouse' .. x .. ' / ' ..y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseUp(x,y)","slotKey":"0"},"key":"0"},{"code":"--receiver.receive(\"BaseData\", *)\n    --CH BaseData\n    if (ship_id_verified == true or ship_id == \"\") then\n        msg_counter = msg_counter + 1\n\n        system.print(\"RECEIVED \"..msg_counter)\n        sync_result = [[<span class=\"cyan\"> >> </span>Uplink <span class=\"cyan\"> << </span> ]]..msg_counter..[[/]]..receiving_wp\n\n        msg_received = true\n\n        rcv_msg = message:gsub(\"@@@\",\"\\\"\")\n        rcv_msg = json.decode(rcv_msg)\n\n        receiving_data()\n        unit.setTimer(\"Ship_Id\", 5)\n    end","filter":{"args":[{"value":"BaseData"},{"variable":"*"}],"signature":"receive(channel,message)","slotKey":"3"},"key":"1"},{"code":"--receiver.receive(\"BaseShipId\",*)\n\n    --CH BaseShipId\n    ship_id_verified = false\n    base_ship_id = message\n    if base_ship_id == ship_id then\n        ship_id_verified = true\n        reqst_waypoints()\n    end","filter":{"args":[{"value":"BaseShipId"},{"variable":"*"}],"signature":"receive(channel,message)","slotKey":"3"},"key":"2"},{"code":"receiving_wp = message","filter":{"args":[{"value":"BaseData_n"},{"variable":"*"}],"signature":"receive(channel,message)","slotKey":"3"},"key":"3"},{"code":"--[[\n\nAuthor: Aviator1280\n\n--]]\n\n--unit.start()\n\n    --LUA PARAMETERS\n\n        if (databank.getFloatValue(\"navigator_MTOW\") ~= 0) then\n            factory_MTOW = databank.getFloatValue(\"navigator_MTOW\")\n            new_MTOW = factory_MTOW/1000\n        else\n            factory_MTOW = 730000 --export\n            new_MTOW = factory_MTOW/1000\n        end\n\n        if (databank.getFloatValue(\"navigator_autobrake\") ~= 0) then\n            factory_autobrake = databank.getFloatValue(\"navigator_autobrake\")\n        else\n            factory_autobrake = 2.3 --export\n        end\n\n        factory_PE_target_altitude = 20000 --export\n\n       --DISPLAY COLORS\n        Reset_Screen_Colors = false --export: To reset Screen Colors to default\n        if Reset_Screen_Colors == true then\n            databank.setStringValue(\"Borders Color\", \"0,0,255\")\n            databank.setStringValue(\"Titles Color\", \"255,255,0\")\n            databank.setStringValue(\"Text Color\", \"217,217,217\")\n            databank.setStringValue(\"Units Color\", \"0,255,255\")\n            databank.setStringValue(\"Buttons Color\", \"0,0,255\")\n        end\n \n        if databank.getStringValue(\"Borders Color\") ~= \"\" then\n            COLORS_Tables_Border = databank.getStringValue(\"Borders Color\")\n        else\n            COLORS_Tables_Border = \"0,0,255\"\n        end\n        if databank.getStringValue(\"Titles Color\") ~= \"\" then\n            COLORS_Table_Titles = databank.getStringValue(\"Titles Color\")\n        else\n            COLORS_Table_Titles = \"255,255,0\"\n        end\n        if databank.getStringValue(\"Text Color\") ~= \"\" then\n            COLORS_Tables_Text = databank.getStringValue(\"Text Color\")\n        else\n            COLORS_Tables_Text = \"217,217,217\"\n        end\n        if databank.getStringValue(\"Units Color\") ~= \"\" then\n            COLORS_Measure_Units = databank.getStringValue(\"Units Color\")\n        else\n            COLORS_Measure_Units = \"0,255,255\"\n        end\n        if databank.getStringValue(\"Buttons Color\") ~= \"\" then\n            COLORS_Buttons = databank.getStringValue(\"Buttons Color\")\n        else\n            COLORS_Buttons = \"0,0,255\"\n        end\n\n    --CSS\n        function css_html()\n            local css = [[\n            <style>\n                td {\n                    border:2px solid rgb(]]..COLORS_Tables_Border..[[);\n                    color: rgb(]]..COLORS_Tables_Text..[[) !important;\n                    font-family: Arial !important;\n                    font-size:35px;\n                    text-align:left;\n                }\n                .center {\n                    text-align:center;\n                }\n                .f_right {\n                    float:right;\n                }\n                .px25 {\n                    font-size:25px;\n                }\n                .yellow {\n                    color: rgb(]]..COLORS_Table_Titles..[[) !important;\n                }\n                .cyan {\n                    color: rgb(]]..COLORS_Measure_Units..[[) !important;\n                }\n                .red {\n                    color:red !important;\n                }\n                .prog_bar {\n                    background: yellow;\n                }\n                .vert_al {\n                    vertical-align: middle;\n                }\n            </style>]]\n            return css\n        end\n\n    --SGUI MODIFIED\n        function SGui.createButtonArea(self, screen, x, y, hx, hy, text, fun)\n            COLORS_Buttons = COLORS_Buttons\n            button = \"<div class='bootstrap' style='background:rgb(\"..COLORS_Buttons..\");width:\".. (hx*100) ..\n                    \"vw;height:\" .. (hy*100) ..\"vh;overflow:hidden;font-family:ArialMT;font-size:\".. (hy*50) ..\n                    \"vh;'>\" .. text .. \"</div>\"\n            id = screen.addContent(x * 100, y * 100, button)\n            self:createClickableArea(id, x, y, hx, hy, fun)\n            return id\n        end\n\n        function SGui.deleteClickableArea(self, id)\n            table[id] = nil\n        end\n\n        sgui = SGui.new()\n\n    --ACTIVATE SCREEN\n        screen.activate()\n        screen.clear()\n\n    --STRING CONVERTER TO VEC3\n        function vec3FromStr(vStr) -- to convert string to vec3\n            local v3 = {};\n            for num in string.gmatch(vStr, \"[-%d%.]+\") do\n                local vN = string.gsub(num, \"%+\", \"\")\n                table.insert(v3, tonumber(vN))\n            end\n            return vec3(table.unpack(v3))\n        end\n\n    --SET COORDINATES FROM ATLAS\n        function set_coordinates(body)\n            planet_system = body.system\n            planet_id = body.bodyid\n            planet_radius = body.radius\n            planet_lat = body.coord[\"x\"]\n            planet_lon = body.coord[\"y\"]\n            planet_alt = body.coord[\"z\"]\n\n            local world_coord = \"::pos{\"..planet_system..\",\"..planet_id..\",\"..planet_lat..\",\"..planet_lon..\",\"..planet_alt..\"}\"\n            system.setWaypoint(world_coord)\n        end\n\n    --SET COORDINATES FROM WP\n        function set_wp_coordinates(body)\n            system.setWaypoint(\"::pos{0,0,\"..body:gsub(\"[()]\",\"\")..\"}\")\n        end\n\n    --WORLD TO VEC3 COORDINATES\n        function coord_converter()\n            for i = 1, #planet_data do\n                if planet_data[i].id == wp_selected_planet then\n                    planet_center = planet_data[i].coord\n                    planet_radius = planet_data[i].radius\n                    planet_system = planet_data[i].system\n                end\n            end\n\n            local wp_pos = {system= planet_system, lat = tonumber(keypad_input_wp_lat), lon = tonumber(keypad_input_wp_lon), alt = tonumber(keypad_input_wp_alt)}\n\n            local deg2rad = math.pi/180\n\n            local lat_rad = wp_pos.lat * deg2rad\n            local lon_rad = wp_pos.lon * deg2rad\n\n            local xproj = math.cos(lat_rad)\n\n            return planet_center + (planet_radius + wp_pos.alt) * vec3(xproj*math.cos(lon_rad),\n                   xproj*math.sin(lon_rad),\n                   math.sin(lat_rad))\n        end\n\n    --GENERATING WP LIST PAGES\n        function generating_wp_pages()\n            local total_key_number = databank.getNbKeys()\n            if total_key_number > 0 then\n                local counter = 0\n                for i = 1, total_key_number do\n                    local wp_id = tostring(\"wp\"..i)\n                    local name = databank.getStringValue(wp_id)\n                    if (tostring(name) ~= nil and tostring(name) ~= \"\") then\n                        counter = counter + 1\n                    end\n                end\n                wp_pages = math.ceil(counter/10)\n                if wp_pages == 0 then\n                    wp_pages = 1\n                end\n            end\n            return wp_pages\n        end\n        wp_pages = generating_wp_pages()\n\n    --WP CHECKER\n        function wp_check()\n            for i=1, 100 do\n                local wp_id = tostring(\"wp\"..i)\n                if databank.getStringValue(wp_id) == \"\" then\n                    local name = databank.setStringValue(wp_id, keypad_input_wpname)\n                    local coord = databank.setStringValue(wp_id..\"_coord\", tostring(from_coordinates))\n                    stored = \"STORED\"\n                    break\n                else\n                    stored = \"Mem Full\"\n                end\n            end\n        end\n    --INVERT ROUTE\n        function invert_route()\n            local dest = databank.getStringValue(\"from\")\n            local from = databank.getStringValue(\"to\")\n\n            if dest ~= \"\" and from ~= \"\" then\n                keypad_input_from = from\n                for i = 1, #wp_list do\n                    local from_check = databank.getStringValue(wp_list[i].wp)\n                    if from_check == from then\n                        keypad_input_from = wp_list[i].id\n                        break\n                    end\n                end\n                databank.setStringValue(\"from\", keypad_input_from)\n\n                keypad_input_dest = dest\n                if dest == \"PPOS\" then\n                    keypad_input_dest = \"No Previous Point\"\n                else\n                    for i = 1, #wp_list do\n                        local dest_check = databank.getStringValue(wp_list[i].wp)\n                        if dest_check == dest then\n                            keypad_input_dest = wp_list[i].id\n                            break\n                        end\n                    end\n                end\n                databank.setStringValue(\"to\", keypad_input_dest)\n\n                from_coordinates = \"\"\n                from_inserted = false\n                status_FM = [[ ]]\n                status_TO = [[ ]]\n                FROM_tick = \" > \"\n                keypad_input_wpname = \"\"\n                wpname_inserted = false\n                WPADD_tick = \" \"\n                stored = \"\"\n                destination_inserted = false\n                destination_coord = \" \"\n                distance_to_go = \" \"\n                distance_to_go_warp = 0\n            end\n        end\n\n    --ENT DESTINATION WP\n        function ent_to_wp(tick)\n            local x = tick\n            if screenState == 0 then\n                if (wp_list[(wp_page_index*10-10)+x] ~= nil) then\n                    local dest = wp_list[(wp_page_index*10-10)+x].id\n                    if dest ~= \"\" then\n                        screenState = 3\n                        keypad_input_dest = dest\n                        databank.setStringValue(\"to\", keypad_input_dest)\n                        status_TO = [[ ]]\n                        destination_inserted = false\n                        destination_coord = \" \"\n                        distance_to_go = \" \"\n                        distance_to_go_warp = 0\n                        screenStateManager()\n                    else\n                        screenState = 3\n                        screenStateManager()\n                    end\n                else\n                    screenState = 3\n                    screenStateManager()\n                end\n            elseif screenState == 6 then\n                local dest = atlas_list[(atlas_page_index*10-10)+x]\n                for i= 1, #planet_data do\n                    if dest == planet_data[i].name then\n                        dest = planet_data[i].id\n                        screenState = 3\n                        keypad_input_dest = dest\n                        databank.setStringValue(\"to\", keypad_input_dest)\n                        status_TO = [[ ]]\n                        destination_inserted = false\n                        destination_coord = \" \"\n                        distance_to_go = \" \"\n                        distance_to_go_warp = 0\n                        screenStateManager()\n                        break\n                    end\n                end\n            else\n                screenState = 3\n                screenStateManager()\n            end\n        end\n\n    --ENT FROM WP\n        function ent_from_wp(tick)\n            local x = tick\n            if screenState == 0 then\n                if (wp_list[(wp_page_index*10-10)+x] ~= nil) then\n                    local from = wp_list[(wp_page_index*10-10)+x].id\n                    if from ~= \"\" then\n                        screenState = 2\n                        keypad_input_from = from\n                        databank.setStringValue(\"from\", keypad_input_from)\n                        from_coordinates = \"\"\n                        from_inserted = false\n                        status_FM = [[ ]]\n                        FROM_tick = \" > \"\n                        keypad_input_wpname = \"\"\n                        wpname_inserted = false\n                        WPADD_tick = \" \"\n                        stored = \"\"\n                        screenStateManager()\n                    else\n                        screenState = 3\n                        screenStateManager()\n                    end\n                else\n                    screenState = 3\n                    screenStateManager()\n                end\n            elseif screenState == 6 then\n                local from = atlas_list[(atlas_page_index*10-10)+x]\n                for i= 1, #planet_data do\n                    if from == planet_data[i].name then\n                        from = planet_data[i].id\n                        screenState = 3\n                        keypad_input_from = from\n                        databank.setStringValue(\"from\", keypad_input_from)\n                        from_coordinates = \"\"\n                        from_inserted = false\n                        status_FM = [[ ]]\n                        FROM_tick = \" > \"\n                        keypad_input_wpname = \"\"\n                        wpname_inserted = false\n                        WPADD_tick = \" \"\n                        stored = \"\"\n                        screenStateManager()\n                        break\n                    end\n                end\n            else\n                screenState = 3\n                screenStateManager()\n            end\n        end\n\n    --MAIN MENU\n        screenState = 0\n        wp_atlas = \"wp\"\n        wp_page_index = 1\n        tick_ = {}\n        tick_[1] = \"\"\n        tick_[2] = \"\"\n        tick_[3] = \"\"\n        tick_[4] = \"\"\n        tick_[5] = \"\"\n        tick_[6] = \"\"\n        tick_[7] = \"\"\n        tick_[8] = \"\"\n        tick_[9] = \"\"\n        tick_[10] = \"\"\n\n        function menu() -- menu buttons\n            sgui:createButtonArea(screen, 0, 0.01, 0.3, 0.08, \"Time Calculator\", function()\n                time_to_go = \" \"\n                screenState = 1\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.31, 0.01, 0.3, 0.08, \"From\", function()\n                if (screenState == 0 or screenState == 6) then\n                    for i=0, 10 do\n                        if tick_[i] == \"cyan\" then\n                            ent_from_wp(i)\n                            break\n                        end\n                    end\n                    screenState = 2\n                    screenStateManager()\n                else\n                    screenState = 2\n                    screenStateManager()\n                end\n            end)\n            sgui:createButtonArea(screen, 0.62, 0.01, 0.3, 0.08, \"Destination\", function()\n                if (screenState == 0 or screenState == 6) then\n                    for i=0, 10 do\n                        if tick_[i] == \"cyan\" then\n                            ent_to_wp(i)\n                            break\n                        end\n                    end\n                    screenState = 3\n                    screenStateManager()\n                else\n                    screenState = 3\n                    screenStateManager()\n                end\n            end)\n            sgui:createButtonArea(screen, 0, 0.1, 0.145, 0.08, \"AD/RN WP\", function()\n                add_wp()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.155, 0.1, 0.145, 0.08, \"CLR WP\", function()\n                clr_wp()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0, 0.2, 0.145, 0.08, \"WP / ATLAS\", function()\n                if screenState == 6 then\n                    screenState = 0\n                    wp_atlas = \"wp\"\n                elseif screenState == 0 then\n                    screenState = 6\n                    wp_atlas = \"atlas\"\n                    atlas_page_index = 1\n                elseif wp_atlas == \"wp\" then\n                    screenState = 0\n                elseif wp_atlas == \"atlas\" then\n                    screenState = 6\n                end\n                tick_ = {}\n                tick_[1] = \"\"\n                tick_[2] = \"\"\n                tick_[3] = \"\"\n                tick_[4] = \"\"\n                tick_[5] = \"\"\n                tick_[6] = \"\"\n                tick_[7] = \"\"\n                tick_[8] = \"\"\n                tick_[9] = \"\"\n                tick_[10] = \"\"\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.155, 0.2, 0.145, 0.08, \"INV ROUTE\", function()\n                invert_route()\n                screenState = 2\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.31, 0.1, 0.3, 0.08, \"Settings\", function()\n                screenState = 9\n                settings_pages = 6\n                tick_ = {}\n                tick_[1] = \"\"\n                tick_[2] = \"\"\n                tick_[3] = \"\"\n                tick_[4] = \"\"\n                tick_[5] = \"\"\n                tick_[6] = \"\"\n                tick_[7] = \"\"\n                tick_[8] = \"\"\n                tick_[9] = \"\"\n                tick_[10] = \"\"\n                ack_clr_wp = [[red]]\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.62, 0.1, 0.3, 0.08, \"Pe Target Alt\", function()\n                target_alt_warning = \"\"\n                screenState = 4\n                screenStateManager()\n            end)\n        end\n        menu()\n\n    --DATABANK INITIALIZATION\n        function databank_initialization()\n            databank.setStringValue(\"databank_verification\", \"Verified\")\n            databank.setStringValue(\"Ship ID\", \"\")\n            databank.setFloatValue(\"navigator_speed\", \"n/a\")\n            databank.setFloatValue(\"navigator_distance\", \"n/a\")\n            databank.setStringValue(\"navigator_target_destination\", \"no Dest.\")\n            databank.setStringValue(\"navigator_coordinates\", \"n/a\")\n            databank.setFloatValue(\"navigator_eta_h\", 0)\n            databank.setFloatValue(\"navigator_eta_m\", 0)\n            databank.setFloatValue(\"navigator_eta_s\", 0)\n            databank.setStringValue(\"navigator_from_coordinates\", \"n/a\")\n            databank.setStringValue(\"navigator_from\", \"no From\")\n            databank.setFloatValue(\"navigator_pe_target_altitude\", factory_PE_target_altitude)\n            databank.setIntValue(\"navigator_from_planet_radius\", 0)\n            databank.setIntValue(\"navigator_target_planet_radius\", 0)\n            databank.setFloatValue(\"navigator_autobrake\", factory_autobrake)\n            databank.setFloatValue(\"navigator_MTOW\", factory_MTOW)\n            databank.setStringValue(\"Borders Color\", \"0,0,255\")\n            databank.setStringValue(\"Titles Color\", \"255,255,0\")\n            databank.setStringValue(\"Text Color\", \"217,217,217\")\n            databank.setStringValue(\"Units Color\", \"0,255,255\")\n            databank.setStringValue(\"Buttons Color\", \"0,0,255\")\n            databank.setStringValue(\"wp_color\", \"none\")\n        end\n    --DATABANK CLEANING\n        function databank_clean(wp, settings, id, colors, dmg)\n            local store_db_wp = {}\n            local settings_list = {}\n            local id_list = {}\n            local colors_list = {}\n            local dmg_list = {}\n            local item_cleared = \"\"\n\n            if wp == true then\n                local db = databank.getKeys()\n                local dbn = databank.getNbKeys()\n                local counter = 0\n                local counter_empty = 0\n                for i=1, dbn do\n                    local key = \"wp\"..i\n                    local value = databank.getStringValue(key)\n                    local key_coord = \"wp\"..i..\"_coord\"\n                    local value_coord = databank.getStringValue(key_coord)\n                    if (value ~= \"\" and value_coord ~= \"\") then\n                        counter = counter +1\n                        local new_key = \"wp\"..counter\n                        local new_key_coord = \"wp\"..counter..\"_coord\"\n                        store_db_wp[counter] = {[\"key\"] = new_key, [\"value\"] = value, [\"key_coord\"] = new_key_coord, [\"value_coord\"] = value_coord}\n                    end\n                 end\n            else\n                item_cleared = item_cleared..\"(1)\"\n            end\n\n            if settings == true then\n                local name = \"navigator_MTOW\"\n                local value = databank.getFloatValue(\"navigator_MTOW\")\n                settings_list[1] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"navigator_autobrake\"\n                value = databank.getFloatValue(\"navigator_autobrake\")\n                settings_list[2] = {[\"name\"] = name, [\"value\"] = value}\n            else\n                keypad_input_MTOW = factory_MTOW/1000\n                keypad_input_autobrake = factory_autobrake\n                item_cleared = item_cleared..\"(2)\"\n            end\n\n            if id == true then\n                local name = \"Ship ID\"\n                local value = databank.getStringValue(\"Ship ID\")\n                id_list[1] = {[\"name\"] = name, [\"value\"] = value}\n            else\n                keypad_input_shipid = \"\"\n                item_cleared = item_cleared..\"(3)\"\n            end\n\n            if colors == true then\n                local name = \"Borders Color\"\n                local value = databank.getStringValue(\"Borders Color\")\n                colors_list[1] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"Titles Color\"\n                value = databank.getStringValue(\"Titles Color\")\n                colors_list[2] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"Text Color\"\n                value = databank.getStringValue(\"Text Color\")\n                colors_list[3] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"Units Color\"\n                value = databank.getStringValue(\"Units Color\")\n                colors_list[4] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"Buttons Color\"\n                value = databank.getStringValue(\"Buttons Color\")\n                colors_list[5] = {[\"name\"] = name, [\"value\"] = value}\n            else\n                COLORS_Tables_Border = \"0,0,255\"\n                COLORS_Table_Titles = \"255,255,0\"\n                COLORS_Tables_Text = \"217,217,217\"\n                COLORS_Measure_Units = \"0,255,255\"\n                COLORS_Buttons = \"0,0,255\"\n                item_cleared = item_cleared..\"(4)\"\n            end\n\n            if dmg == true then\n                local name = \"DMG Scale\"\n                local value = databank.getFloatValue(\"DMG Scale\")\n                dmg_list[1] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"DMG TV U/D\"\n                value = databank.getFloatValue(\"DMG TV U/D\")\n                dmg_list[2] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"DMG TV L/R\"\n                value = databank.getFloatValue(\"DMG TV L/R\")\n                dmg_list[3] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"DMG SV U/D\"\n                value = databank.getFloatValue(\"DMG SV U/D\")\n                dmg_list[4] = {[\"name\"] = name, [\"value\"] = value}\n                name = \"DMG SV L/R\"\n                value = databank.getFloatValue(\"DMG SV L/R\")\n                dmg_list[5] = {[\"name\"] = name, [\"value\"] = value}\n            else\n                keypad_input_dmg1 = 3\n                DMG_REP_TOP_VIEW_Up_Down = -20\n                DMG_REP_TOP_VIEW_LH_RH = 30\n                DMG_REP_SIDE_VIEW_Up_Down = 40\n                DMG_REP_SIDE_VIEW_LH_RH = 100\n                item_cleared = item_cleared..\"(5)\"\n            end\n\n            databank.clear()\n\n            databank_initialization()\n\n            if wp == true then\n                for i=1, #store_db_wp do\n                    databank.setStringValue(store_db_wp[i].key, store_db_wp[i].value)\n                    databank.setStringValue(store_db_wp[i].key_coord, store_db_wp[i].value_coord)\n                end\n            end\n            if settings == true then\n                for i=1, #settings_list do\n                    databank.setFloatValue(settings_list[i].name, settings_list[i].value)\n                end\n            end\n            if id == true then\n                for i=1, #id_list do\n                    databank.setStringValue(id_list[i].name, id_list[i].value)\n                end\n            end\n            if colors == true then\n                for i=1, #colors_list do\n                    databank.setStringValue(colors_list[i].name, colors_list[i].value)\n                end\n            end\n            if dmg == true then\n                for i=1, #dmg_list do\n                    databank.setFloatValue(dmg_list[i].name, dmg_list[i].value)\n                end\n            end\n\n            reset_db_status = \"CLEARED<br>\"..item_cleared\n\n            screenState = 12\n            screenStateManager()\n        end\n\n    --DATA STATUS\n        status_FM = [[ ]]\n        status_TO = [[ ]]\n        status_TA = [[ ]]\n        ship_id_verified = false\n        function data_status()\n            if (databank.getStringValue(\"databank_verification\") ~= \"Verified\") then\n                databank.clear()\n                databank_initialization()\n            else\n                databank.setStringValue(\"\", nil)\n                ship_id = databank.getStringValue(\"Ship ID\")\n            end\n\n            local data_status_table = css_html()\n            data_status_table = data_status_table..[[\n                <table width=\"980vw\">\n                    <tr height=\"50vh\"><td class=\"yellow\" width=\"150vw\">Ship ID:</td><td class=\"center\" width=\"320vw\">]]..ship_id..[[</td><td class=\"yellow\" width=\"150vw\">Stored:</td><td class=\"center\" width=\"120vw\">]].. status_FM ..[[</td><td class=\"center\" width=\"120vw\">]].. status_TO ..[[</td><td class=\"center\" width=\"120vw\">]].. status_TA ..[[</td></tr>\n                </table>]]\n\n            status_table = screen.addContent(1, 70, data_status_table)\n        end\n        data_status()\n\n   --KEYBOARD\n    --KEYPAD ADD DIGITS\n        function insert_keys(new_digit) -- set rules for digits for different screenState\n           --TIME CALCULATOR PAGE\n            if screenState == 1 then\n                if keypad_input_su == \"Distance Invalid\" then\n                    keypad_input_su = nil\n                    databank.setFloatValue(\"navigator_distance\", \"n/a\")\n                    su_distance_inserted = false\n                end\n\n                if time_to_go == \"Speed Is Invalid\" then\n                    keypad_input_speed = nil\n                    databank.setFloatValue(\"navigator_speed\", \"0\")\n                    time_to_go = \" \"\n                    databank.setFloatValue(\"navigator_eta_h\", 0)\n                    databank.setFloatValue(\"navigator_eta_m\", 0)\n                    databank.setFloatValue(\"navigator_eta_s\", 0)\n                end\n\n                if (su_distance_inserted == true and speed_inserted == true) then\n                    keypad_input_speed = nil\n                    databank.setFloatValue(\"navigator_speed\", \"0\")\n                    speed_inserted = false\n                    time_to_go = \" \"\n                    databank.setFloatValue(\"navigator_eta_h\", 0)\n                    databank.setFloatValue(\"navigator_eta_m\", 0)\n                    databank.setFloatValue(\"navigator_eta_s\", 0)\n                end\n\n                if su_distance_inserted == false then\n                    keypad_input = keypad_input_su\n                    keypad_input_su = add_digit(new_digit, keypad_input)\n                elseif speed_inserted == false then\n                    keypad_input = keypad_input_speed\n                    keypad_input_speed = add_digit(new_digit, keypad_input)\n                end\n            end\n\n           --FROM PAGE\n            if screenState == 2 then\n                if (FROM_tick == \" > \" and from_inserted == true or keypad_input_from == \"No Previous Point\") then\n                    keypad_input_from = nil\n                    databank.setStringValue(\"navigator_from\", \"no From\")\n                    from_inserted = false\n                    status_FM = [[ ]]\n                    from_coordinates = \"\"\n                    databank.setStringValue(\"navigator_from_coordinates\", \"n/a\")\n                end\n\n                if from_inserted == false then\n                    keypad_input = keypad_input_from\n                    keypad_input_from = add_digit(new_digit, keypad_input)\n                elseif (from_inserted == true and WPADD_tick == \" > \") then\n                    keypad_input = keypad_input_wpname\n                    keypad_input_wpname = add_digit(new_digit, keypad_input)\n                end\n            end\n\n           --DESTINATION PAGE\n            if screenState == 3 then\n                if (destination_coord == \"Not Present In Databank\" or destination_inserted == true or keypad_input_dest == \"No Previous Point\") then\n                    keypad_input_dest = nil\n                    databank.setStringValue(\"navigator_target_destination\", \"no Dest.\")\n                    destination_inserted = false\n                    status_TO = [[ ]]\n                    distance_to_go = \" \"\n                    destination_coord = \"\"\n                    databank.setStringValue(\"navigator_coordinates\", \"n/a\")\n                end\n                keypad_input = keypad_input_dest\n                keypad_input_dest = add_digit(new_digit, keypad_input)\n            end\n\n           --TARGET PE ALTITUDE PAGE\n            if screenState == 4 then\n                if (target_alt_warning == \"Warning Altitude Too Low\" or target_pe_altitude_inserted == true or keypad_input_pe_target_alt == \"Invalid Input\") then\n                    keypad_input_pe_target_alt = nil\n                    target_pe_altitude_inserted = false\n                    status_TA = [[ ]]\n                    target_alt_warning = \"\"\n                else\n                    keypad_input_pe_target_alt = keypad_input_pe_target_alt\n                end\n                keypad_input = keypad_input_pe_target_alt\n                keypad_input_pe_target_alt = add_digit(new_digit, keypad_input)\n            end\n\n           --SETTINGS PAGE\n            if screenState == 5 then        --(Ship Settings)\n                if (MTOW_inserted == true and MTOW_tick == \" > \") then\n                    keypad_input_MTOW = \"\"\n                    MTOW_inserted = false\n                end\n                if (autobrake_stops_at_inserted == true and autobrake_tick == \" > \") then\n                    keypad_input_autobrake = \"\"\n                    autobrake_stops_at_inserted = false\n                end\n                if MTOW_inserted == false then\n                    keypad_input = keypad_input_MTOW\n                    keypad_input_MTOW = add_digit(new_digit, keypad_input)\n                elseif autobrake_stops_at_inserted == false then\n                    keypad_input = keypad_input_autobrake\n                    keypad_input_autobrake = add_digit(new_digit, keypad_input)\n                end\n            elseif screenState == 7 then    --(WP Store)\n                if wp_name_tick == \" > \" then\n                    keypad_input = keypad_input_wp_name\n                    keypad_input_wp_name = add_digit(new_digit, keypad_input)\n                elseif wp_lat_tick == \" > \" then\n                    keypad_input = keypad_input_wp_lat\n                    keypad_input_wp_lat = add_digit(new_digit, keypad_input)\n                elseif wp_lon_tick == \" > \" then\n                    keypad_input = keypad_input_wp_lon\n                    keypad_input_wp_lon = add_digit(new_digit, keypad_input)\n                elseif wp_alt_tick == \" > \" then\n                    keypad_input = keypad_input_wp_alt\n                    keypad_input_wp_alt = add_digit(new_digit, keypad_input)\n                end\n            elseif screenState == 8 then    --(WP Sync)\n                if shipid_tick == \" > \" then\n                    shipid_color = \"cyan\"\n                    keypad_input = keypad_input_shipid\n                    keypad_input_shipid = add_digit(new_digit, keypad_input)\n                end\n            elseif screenState == 10 then   --(Screen Colors)\n                if keypad_input_color1 == \"Insert RGB\" or keypad_input_color1 == \"Black Not An Option\" then\n                    keypad_input_color1 = \"\"\n                elseif keypad_input_color2 == \"Insert RGB\" or keypad_input_color2 == \"Black Not An Option\" then\n                    keypad_input_color2 = \"\"\n                elseif keypad_input_color3 == \"Insert RGB\" or keypad_input_color3 == \"Black Not An Option\" then\n                    keypad_input_color3 = \"\"\n                elseif keypad_input_color4 == \"Insert RGB\" or keypad_input_color4 == \"Black Not An Option\" then\n                    keypad_input_color4 = \"\"\n                elseif keypad_input_color5 == \"Insert RGB\" or keypad_input_color5 == \"Black Not An Option\" then\n                    keypad_input_color5 = \"\"\n                end\n                if tick_color_1 == \" > \" then\n                    keypad_input = keypad_input_color1\n                    keypad_input_color1 = add_digit(new_digit, keypad_input)\n                elseif tick_color_2 == \" > \" then\n                    keypad_input = keypad_input_color2\n                    keypad_input_color2 = add_digit(new_digit, keypad_input)\n                elseif tick_color_3 == \" > \" then\n                    keypad_input = keypad_input_color3\n                    keypad_input_color3 = add_digit(new_digit, keypad_input)\n                elseif tick_color_4 == \" > \" then\n                    keypad_input = keypad_input_color4\n                    keypad_input_color4 = add_digit(new_digit, keypad_input)\n                elseif tick_color_5 == \" > \" then\n                    keypad_input = keypad_input_color5\n                    keypad_input_color5 = add_digit(new_digit, keypad_input)\n                end\n            elseif screenState == 11 then   --(DMG Rep.)\n                if tick_dmg_1 == \" > \" then\n                    keypad_input = keypad_input_dmg1\n                    keypad_input_dmg1 = add_digit(new_digit, keypad_input)\n                    dmg_ack_color1 = \"cyan\"\n                elseif tick_dmg_3 == \" > \" then\n                    keypad_input = keypad_input_dmg2\n                    keypad_input_dmg2 = add_digit(new_digit, keypad_input)\n                    dmg_ack_color2 = \"cyan\"\n                end\n            end\n        end\n\n        function add_digit(new_digit, keypad_input)  -- to concatenate digits\n            if keypad_input then\n                return tostring(keypad_input) .. tostring(new_digit)\n                else\n                return new_digit\n            end\n        end\n\n    --KEYPAD NUMBERS\n        function keypad_numbers()\n\n            sgui:createButtonArea(screen, 0,0.3,0.06,0.08, \"1\", function()\n                local new_digit = 1\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.3,0.06,0.08, \"2\", function()\n                local new_digit = 2\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.3,0.06,0.08, \"3\", function()\n                local new_digit = 3\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0,0.4,0.06,0.08, \"4\", function() \n                local new_digit = 4\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.4,0.06,0.08, \"5\", function() \n                local new_digit = 5\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.4,0.06,0.08, \"6\", function() \n                local new_digit = 6\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0,0.5,0.06,0.08, \"7\", function() \n                local new_digit = 7\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.5,0.06,0.08, \"8\", function() \n                local new_digit = 8\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.5,0.06,0.08, \"9\", function() \n                local new_digit = 9\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.6,0.06,0.08, \"0\", function() \n                local new_digit = 0\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0,0.6,0.06,0.08, \"CLR\", function()\n                clr_button()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.6,0.06,0.08, \"ENT\", function()\n                ent_button()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.21,0.6,0.03,0.08, \".\", function()\n                if screenState == 10 then\n                    local new_digit = \",\"\n                    insert_keys(new_digit)\n                    screenStateManager()\n                else\n                    local new_digit = \".\"\n                    insert_keys(new_digit)\n                    screenStateManager()\n                end\n            end)\n            sgui:createButtonArea(screen, 0.25,0.3,0.03,0.08, \"↑\", function()\n                small_arrow_up()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.21,0.3,0.03,0.08, \"&#x21D1\", function()\n                big_arrow_up()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.25,0.4,0.03,0.08, \"↓\", function()\n                small_arrow_down()\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.21,0.4,0.03,0.08, \"&#x21D3\", function()\n                big_arrow_down()\n                screenStateManager()\n            end)\n        end\n        keypad_numbers()\n\n    --KEYPAD LETTERS\n        function keypad_letters()\n\n            sgui:createButtonArea(screen, 0,0.8,0.06,0.08, \"A\", function()\n                local new_digit = \"a\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.8,0.06,0.08, \"B\", function()\n                local new_digit = \"b\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.8,0.06,0.08, \"C\", function()\n                local new_digit = \"c\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.21,0.8,0.06,0.08, \"D\", function()\n                local new_digit = \"d\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.28,0.8,0.06,0.08, \"E\", function()\n                local new_digit = \"e\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.35,0.8,0.06,0.08, \"F\", function()\n                local new_digit = \"f\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.42,0.8,0.06,0.08, \"G\", function()\n                local new_digit = \"g\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.49,0.8,0.06,0.08, \"H\", function()\n                local new_digit = \"h\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.56,0.8,0.06,0.08, \"I\", function()\n                local new_digit = \"i\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.63,0.8,0.06,0.08, \"J\", function()\n                local new_digit = \"j\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.70,0.8,0.06,0.08, \"K\", function()\n                local new_digit = \"k\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.77,0.8,0.06,0.08, \"L\", function()\n                local new_digit = \"l\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.84,0.8,0.06,0.08, \"M\", function()\n                local new_digit = \"m\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.91,0.8,0.06,0.08, \"N/-\", function()\n                if (screenState == 7 and (wp_lat_tick == \" > \" or wp_lon_tick == \" > \" or wp_alt_tick == \" > \")) then\n                    local new_digit = \"-0\"\n                    insert_keys(new_digit)\n                    screenStateManager()\n                elseif (screenState == 11) then\n                    local new_digit = \"-0\"\n                    insert_keys(new_digit)\n                    screenStateManager()\n                else\n                    local new_digit = \"n\"\n                    insert_keys(new_digit)\n                    screenStateManager()\n                end\n            end)\n        -- second line\n            sgui:createButtonArea(screen, 0,0.9,0.06,0.08, \"O\", function()\n                local new_digit = \"o\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.07,0.9,0.06,0.08, \"P\", function()\n                local new_digit = \"p\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.14,0.9,0.06,0.08, \"Q\", function()\n                local new_digit = \"q\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.21,0.9,0.06,0.08, \"R\", function()\n                local new_digit = \"r\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.28,0.9,0.06,0.08, \"S\", function()\n                local new_digit = \"s\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.35,0.9,0.06,0.08, \"T\", function()\n                local new_digit = \"t\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.42,0.9,0.06,0.08, \"U\", function()\n                local new_digit = \"u\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.49,0.9,0.06,0.08, \"V\", function()\n                local new_digit = \"v\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.56,0.9,0.06,0.08, \"W\", function()\n                local new_digit = \"w\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.63,0.9,0.06,0.08, \"X\", function()\n                local new_digit = \"x\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.70,0.9,0.06,0.08, \"Y\", function()\n                local new_digit = \"y\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.77,0.9,0.06,0.08, \"Z\", function()\n                local new_digit = \"z\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.84,0.9,0.04,0.08, \"_\", function()\n                local new_digit = \"_\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n            sgui:createButtonArea(screen, 0.89,0.9,0.08,0.08, \"Moon\", function()\n                local new_digit = \"_moon_\"\n                insert_keys(new_digit)\n                screenStateManager()\n            end)\n        end\n        keypad_letters()\n\n   --BUTTON FUNCTIONS\n    --ADD/RENAME WP BUTTON\n        function add_wp()\n            if (screenState == 2 and keypad_input_from == \"PPOS\" and keypad_input_wpname ~= \"\") then\n                wp_check()\n                screenState = 2\n            elseif (screenState == 2 and keypad_input_from ~= \"\" and keypad_input_wpname ~= \"\") then\n                databank.setStringValue(wp_id_rename, keypad_input_wpname)\n                stored = \"WP RENAMED\"\n                screenState = 2\n            elseif (screenState == 7 and wp_name_inserted == true and wp_lat_inserted == true and wp_lon_inserted == true and wp_alt_inserted == true and (wp_name_tick == \" > \" or wp_lat_tick == \" > \" or wp_lon_tick == \" > \" or wp_alt_tick == \" > \")) then\n                keypad_input_wpname = keypad_input_wp_name\n                from_coordinates = coord_converter()\n                wp_check()\n                if stored == \"Mem Full\" then\n                    screenState = 7\n                else\n                    screenState = 0\n                end\n            end\n        end\n    --CLR WP BUTTON\n        function clr_wp()\n            if screenState == 0 then\n                local x = 0\n                for i=1, 10 do\n                    x = x + 1\n                    if (tick_[x] == \"cyan\" and wp_list[x] ~= nil) then\n                        local wp_id = wp_list[(wp_page_index*10-10)+x].id\n                        for x= 1, #wp_list do\n                            if wp_list[x].id == wp_id then\n                                local wp_del = wp_list[x].wp\n                                databank.setStringValue(wp_del, nil)\n                                databank.setStringValue(wp_del..\"_coord\", nil)\n                                break\n                            end\n                        end\n                    end\n                end\n            end\n        end\n    --SMALL ARROW UP\n        function small_arrow_up()\n            if (screenState == 0 or screenState == 6 or screenState == 9) then\n                if tick_[10] == \"cyan\" then tick_[10] = \"\" tick_[9] = \"cyan\"\n                elseif tick_[9] == \"cyan\" then tick_[9] = \"\" tick_[8] = \"cyan\"\n                elseif tick_[8] == \"cyan\" then tick_[8] = \"\" tick_[7] = \"cyan\"\n                elseif tick_[7] == \"cyan\" then tick_[7] = \"\" tick_[6] = \"cyan\"\n                elseif tick_[6] == \"cyan\" then tick_[6] = \"\" tick_[5] = \"cyan\"\n                elseif tick_[5] == \"cyan\" then tick_[5] = \"\" tick_[4] = \"cyan\"\n                elseif tick_[4] == \"cyan\" then tick_[4] = \"\" tick_[3] = \"cyan\"\n                elseif tick_[3] == \"cyan\" then tick_[3] = \"\" tick_[2] = \"cyan\"\n                elseif tick_[2] == \"cyan\" then tick_[2] = \"\" tick_[1] = \"cyan\"\n                end\n            end\n            if screenState == 7 then    --(WP Store)\n                if wp_lat_tick == \" > \" then\n                    wp_name_tick = \" > \"\n                    wp_lat_tick = \" \"\n                elseif wp_lon_tick == \" > \" then\n                    wp_lat_tick = \" > \"\n                    wp_lon_tick = \" \"\n                elseif wp_alt_tick == \" > \" then\n                    wp_lon_tick = \" > \"\n                    wp_alt_tick = \" \"\n                end\n            end\n            if screenState == 8 then    --(WP Sync)\n                if up_sync_tick == \" > \" then\n                    up_sync_tick = \" \"\n                    dwn_sync_tick = \" > \"\n                elseif dwn_sync_tick == \" > \" then\n                    dwn_sync_tick = \" \"\n                    shipid_tick = \" > \"\n                end\n            end\n            if screenState == 10 then   --(Screen Colors)\n                if tick_color_5 == \" > \" then\n                    tick_color_5 = \" \"\n                    tick_color_4 = \" > \"\n                elseif tick_color_4 == \" > \" then\n                    tick_color_4 = \" \"\n                    tick_color_3 = \" > \"\n                elseif tick_color_3 == \" > \" then\n                    tick_color_3 = \" \"\n                    tick_color_2 = \" > \"\n                elseif tick_color_2 == \" > \" then\n                    tick_color_2 = \" \"\n                    tick_color_1 = \" > \"\n                end\n            end\n            if screenState == 11 then   --(DMG Rep.)\n                if tick_dmg_4 == \" > \" then\n                    tick_dmg_4 = \" \"\n                    tick_dmg_3 = \" > \"\n                elseif tick_dmg_3 == \" > \" then\n                    tick_dmg_3 = \" \"\n                    tick_dmg_2 = \" > \"\n                    if tonumber(keypad_input_dmg2) == nil then\n                        keypad_input_dmg2 = 1\n                        dmg_factor = keypad_input_dmg2\n                        dmg_ack_color2 = \"yellow\"\n                    end\n                elseif tick_dmg_2 == \" > \" then\n                    tick_dmg_2 = \" \"\n                    tick_dmg_1 = \" > \"\n                end\n            end\n            if screenState == 12 then   --(DB Reset)\n                if tick_[5] == \" > \" then tick_[5] = \"\" tick_[4] = \" > \"\n                elseif tick_[4] == \" > \" then tick_[4] = \"\" tick_[3] = \" > \"\n                elseif tick_[3] == \" > \" then tick_[3] = \"\" tick_[2] = \" > \"\n                elseif tick_[2] == \" > \" then tick_[2] = \"\" tick_[1] = \" > \"\n                end\n            end\n        end\n    --BIG ARROW UP\n        function big_arrow_up()\n            if screenState == 0  then       --wp page up\n                if wp_page_index > 1 then\n                    wp_page_index = wp_page_index -1\n                end\n            elseif screenState == 6 then    --atlas page up\n                if atlas_page_index > 1 then\n                    atlas_page_index = atlas_page_index -1\n                end\n            end\n                tick_ = {}\n                tick_[1] = \"\"\n                tick_[2] = \"\"\n                tick_[3] = \"\"\n                tick_[4] = \"\"\n                tick_[5] = \"\"\n                tick_[6] = \"\"\n                tick_[7] = \"\"\n                tick_[8] = \"\"\n                tick_[9] = \"\"\n                tick_[10] = \"\"\n\n            if screenState == 12 then       --settings6\n                screenState = 11            --settings5\n                tick_dmg_1 = \" > \"\n                tick_dmg_2 = \" \"\n                tick_dmg_3 = \" \"\n                tick_dmg_4 = \" \"\n                dmg_ack_color1 = \"yellow\"\n                dmg_ack_color2 = \"yellow\"\n                if databank.getFloatValue(\"DMG Scale\") ~= nil then\n                    keypad_input_dmg1 = databank.getFloatValue(\"DMG Scale\")\n                else\n                    keypad_input_dmg1 = 3\n                end\n                if databank.getFloatValue(\"DMG TV U/D\") ~= nil then\n                    DMG_REP_TOP_VIEW_Up_Down = databank.getFloatValue(\"DMG TV U/D\")\n                else\n                    DMG_REP_TOP_VIEW_Up_Down = -20 --(Higer value for Up) (Lower for Down)\n                end\n                if databank.getFloatValue(\"DMG TV L/R\") ~= nil then\n                    DMG_REP_TOP_VIEW_LH_RH = databank.getFloatValue(\"DMG TV L/R\")\n                else\n                    DMG_REP_TOP_VIEW_LH_RH = 30 --(Higher value for Right) (Lower for Left)\n                end\n                if databank.getFloatValue(\"DMG SV U/D\") ~= nil then\n                    DMG_REP_SIDE_VIEW_Up_Down = databank.getFloatValue(\"DMG SV U/D\")\n                else\n                    DMG_REP_SIDE_VIEW_Up_Down = 40 --(Higher value for Down) (Lower for Up)\n                end\n                if databank.getFloatValue(\"DMG SV L/R\") ~= nil then\n                    DMG_REP_SIDE_VIEW_LH_RH = databank.getFloatValue(\"DMG SV L/R\")\n                else\n                    DMG_REP_SIDE_VIEW_LH_RH = 100 --(Higer value for Right) (Lower for Left)\n                end\n                keypad_input_dmg2 = 1\n                dmg_factor = keypad_input_dmg2\n            elseif screenState == 11 then   --settings5\n                screenState = 10            --settings4\n                tick_color_1 = \" > \"\n                tick_color_2 = \" \"\n                tick_color_3 = \" \"\n                tick_color_4 = \" \"\n                tick_color_5 = \" \"\n                keypad_input_color1 = COLORS_Tables_Border\n                keypad_input_color2 = COLORS_Table_Titles\n                keypad_input_color3 = COLORS_Tables_Text\n                keypad_input_color4 = COLORS_Measure_Units\n                keypad_input_color5 = COLORS_Buttons\n            elseif screenState == 10 then   --settings4\n                screenState = 8             --settings3\n                dwn_sync_tick = \" > \"\n                up_sync_tick = \" \"\n                sync_result = \"\"\n                receiving_wp = 0\n                wp_synced = 0\n                index_sync = 1\n                prog_bar = 0\n                keypad_input_shipid = databank.getStringValue(\"Ship ID\")\n                shipid_tick = \" \"\n                shipid_color = \"yellow\"\n            elseif screenState == 8 then    --settings3\n                screenState = 7             --settings2\n                wp_name_tick = \" > \"\n                wp_lat_tick = \" \"\n                wp_lon_tick = \" \"\n                wp_alt_tick = \" \"\n            elseif screenState == 7 then    --settings2\n                screenState = 5             --settings1\n            end\n        end\n    --SMALL ARROW DOWN\n        function small_arrow_down()\n            if (screenState == 0 or screenState == 6 or screenState == 9)then\n                if tick_[1] == \"\" then tick_[1] = \"cyan\"\n                elseif tick_[1] == \"cyan\" then tick_[1] = \" \" tick_[2] = \"cyan\"\n                elseif tick_[2] == \"cyan\" then tick_[2] = \"\" tick_[3] = \"cyan\"\n                elseif tick_[3] == \"cyan\" then tick_[3] = \"\" tick_[4] = \"cyan\"\n                elseif tick_[4] == \"cyan\" then tick_[4] = \"\" tick_[5] = \"cyan\"\n                elseif tick_[5] == \"cyan\" then tick_[5] = \"\" tick_[6] = \"cyan\"\n                elseif tick_[6] == \"cyan\" then tick_[6] = \"\" tick_[7] = \"cyan\"\n                elseif tick_[7] == \"cyan\" then tick_[7] = \"\" tick_[8] = \"cyan\"\n                elseif tick_[8] == \"cyan\" then tick_[8] = \"\" tick_[9] = \"cyan\"\n                elseif tick_[9] == \"cyan\" then tick_[9] = \"\" tick_[10] = \"cyan\"\n                end\n            end\n            if screenState == 7 then    --(WP Store)\n                if wp_name_tick == \" > \" then\n                    wp_name_tick = \" \"\n                    wp_lat_tick = \" > \"\n                elseif wp_lat_tick == \" > \" then\n                    wp_lat_tick = \" \"\n                    wp_lon_tick = \" > \"\n                elseif wp_lon_tick == \" > \" then\n                    wp_lon_tick = \" \"\n                    wp_alt_tick = \" > \"\n                end\n            end\n            if screenState == 8 then    --(WP Sync)\n                if shipid_tick == \" > \" then\n                    shipid_tick = \" \"\n                    dwn_sync_tick = \" > \"\n                elseif dwn_sync_tick == \" > \" then\n                    dwn_sync_tick = \" \"\n                    up_sync_tick = \" > \"\n                end\n            end\n            if screenState == 10 then   --(Screen Colors)\n                if tick_color_1 == \" > \" then\n                    tick_color_1 = \" \"\n                    tick_color_2 = \" > \"\n                elseif tick_color_2 == \" > \" then\n                    tick_color_2 = \" \"\n                    tick_color_3 = \" > \"\n                elseif tick_color_3 == \" > \" then\n                    tick_color_3 = \" \"\n                    tick_color_4 = \" > \"\n                elseif tick_color_4 == \" > \" then\n                    tick_color_4 = \" \"\n                    tick_color_5 = \" > \"\n                end\n            end\n            if screenState == 11 then   --(DMG Rep.)\n                if tick_dmg_1 == \" > \" then\n                    tick_dmg_1 = \" \"\n                    tick_dmg_2 = \" > \"\n                    if tonumber(keypad_input_dmg1) == nil then\n                        dmg_ack_color1 = \"yellow\"\n                        keypad_input_dmg1 = 3\n                        databank.setFloatValue(\"DMG Scale\", keypad_input_dmg1)\n                    end\n                elseif tick_dmg_2 == \" > \" then\n                    tick_dmg_2 = \" \"\n                    tick_dmg_3 = \" > \"\n                elseif tick_dmg_3 == \" > \" then\n                    tick_dmg_3 = \" \"\n                    tick_dmg_4 = \" > \"\n                    if tonumber(keypad_input_dmg2) == nil then\n                        keypad_input_dmg2 = 1\n                        dmg_factor = keypad_input_dmg2\n                        dmg_ack_color2 = \"yellow\"\n                    end\n                end\n            end\n            if screenState == 12 then   --(DB Reset)\n                if tick_[1] == \" > \" then tick_[1] = \"\" tick_[2] = \" > \"\n                elseif tick_[2] == \" > \" then tick_[2] = \"\" tick_[3] = \" > \"\n                elseif tick_[3] == \" > \" then tick_[3] = \"\" tick_[4] = \" > \"\n                elseif tick_[4] == \" > \" then tick_[4] = \"\" tick_[5] = \" > \"\n                end\n            end\n        end\n    --BIG ARROW DOWN\n        function big_arrow_down()\n            if screenState == 0 then       --wp page down\n                if wp_page_index < wp_pages then\n                    wp_page_index = wp_page_index +1\n                end\n            elseif screenState == 6 then    --atlas page down\n                if atlas_page_index < atlas_pages then\n                    atlas_page_index = atlas_page_index +1\n                end\n            end\n                tick_ = {}\n                tick_[1] = \"\"\n                tick_[2] = \"\"\n                tick_[3] = \"\"\n                tick_[4] = \"\"\n                tick_[5] = \"\"\n                tick_[6] = \"\"\n                tick_[7] = \"\"\n                tick_[8] = \"\"\n                tick_[9] = \"\"\n                tick_[10] = \"\"\n\n            if screenState == 5 then        --settings1\n                screenState = 7             --settings2\n                wp_name_tick = \" > \"\n                wp_lat_tick = \" \"\n                wp_lon_tick = \" \"\n                wp_alt_tick = \" \"\n            elseif screenState == 7 then    --settings2\n                screenState = 8             --settings3\n                dwn_sync_tick = \" > \"\n                up_sync_tick = \" \"\n                sync_result = \"\"\n                receiving_wp = 0\n                wp_synced = 0\n                index_sync = 1\n                prog_bar = 0\n                keypad_input_shipid = databank.getStringValue(\"Ship ID\")\n                shipid_tick = \" \"\n                shipid_color = \"yellow\"\n            elseif screenState == 8 then    --settings3\n                screenState = 10            --settings4\n                tick_color_1 = \" > \"\n                tick_color_2 = \" \"\n                tick_color_3 = \" \"\n                tick_color_4 = \" \"\n                tick_color_5 = \" \"\n                keypad_input_color1 = COLORS_Tables_Border\n                keypad_input_color2 = COLORS_Table_Titles\n                keypad_input_color3 = COLORS_Tables_Text\n                keypad_input_color4 = COLORS_Measure_Units\n                keypad_input_color5 = COLORS_Buttons\n            elseif screenState == 10 then   --settings4\n                screenState = 11            --settings5\n                tick_dmg_1 = \" > \"\n                tick_dmg_2 = \" \"\n                tick_dmg_3 = \" \"\n                tick_dmg_4 = \" \"\n                dmg_ack_color1 = \"yellow\"\n                dmg_ack_color2 = \"yellow\"\n                if databank.getFloatValue(\"DMG Scale\") ~= nil then\n                    keypad_input_dmg1 = databank.getFloatValue(\"DMG Scale\")\n                else\n                    keypad_input_dmg1 = 3\n                end\n                if databank.getFloatValue(\"DMG TV U/D\") ~= nil then\n                    DMG_REP_TOP_VIEW_Up_Down = databank.getFloatValue(\"DMG TV U/D\")\n                else\n                    DMG_REP_TOP_VIEW_Up_Down = -20 --(Higer value for Up) (Lower for Down)\n                end\n                if databank.getFloatValue(\"DMG TV L/R\") ~= nil then\n                    DMG_REP_TOP_VIEW_LH_RH = databank.getFloatValue(\"DMG TV L/R\")\n                else\n                    DMG_REP_TOP_VIEW_LH_RH = 30 --(Higher value for Right) (Lower for Left)\n                end\n                if databank.getFloatValue(\"DMG SV U/D\") ~= nil then\n                    DMG_REP_SIDE_VIEW_Up_Down = databank.getFloatValue(\"DMG SV U/D\")\n                else\n                    DMG_REP_SIDE_VIEW_Up_Down = 40 --(Higher value for Down) (Lower for Up)\n                end\n                if databank.getFloatValue(\"DMG SV L/R\") ~= nil then\n                    DMG_REP_SIDE_VIEW_LH_RH = databank.getFloatValue(\"DMG SV L/R\")\n                else\n                    DMG_REP_SIDE_VIEW_LH_RH = 100 --(Higer value for Right) (Lower for Left)\n                end\n                keypad_input_dmg2 = 1\n                dmg_factor = keypad_input_dmg2\n            elseif screenState == 11 then   --settings5\n                screenState = 12            --settings6\n                tick_ = {}\n                tick_[1] = \" > \"\n                tick_[2] = \"\"\n                tick_[3] = \"\"\n                tick_[4] = \"\"\n                tick_[5] = \"\"\n                db_mark_1 = \"✔\"\n                db_mark_1_TF = true\n                db_mark_2 = \"✔\"\n                db_mark_2_TF = true\n                db_mark_3 = \"✔\"\n                db_mark_3_TF = true\n                db_mark_4 = \"✔\"\n                db_mark_4_TF = true\n                db_mark_5 = \"✔\"\n                db_mark_5_TF = true\n                reset_db_status = databank.getNbKeys()..\" Keys\"\n                screenStateManager()\n            end\n        end\n    --ENT BUTTON\n        function ent_button()\n           -- ENT Time Calculator\n            if screenState == 1 then\n                if (su_distance_inserted == true and (keypad_input_speed ~= \" \" or keypad_input_speed == \" \" or tonumber(keypad_input_speed) > 0)) then\n                    local su_num = tonumber(keypad_input_su)\n                    local speed_num = tonumber(keypad_input_speed)\n                    if (keypad_input_speed == \" \" or speed_num >= 30000) then\n                        if math.floor((vec3(core.getVelocity()):len())*3.6) == 0 then\n                            keypad_input_speed = \"0\"\n                            databank.setFloatValue(\"navigator_speed\", 0)\n                            speed_num = 0\n                            databank.setFloatValue(\"navigator_eta_h\", 0)\n                            databank.setFloatValue(\"navigator_eta_m\", 0)\n                            databank.setFloatValue(\"navigator_eta_s\", 0)\n                            speed_inserted = false\n                        else\n                            keypad_input_speed = tostring(math.floor((vec3(core.getVelocity()):len())*3.6))\n                            speed_num = math.floor((vec3(core.getVelocity()):len())*3.6)\n                            databank.setFloatValue(\"navigator_speed\", speed_num)\n                            speed_inserted = true\n                        end\n                    else\n                        speed_num = tonumber(keypad_input_speed)\n                        databank.setFloatValue(\"navigator_speed\", speed_num)\n                    end\n                    if speed_num == 0 then\n                        time_to_go = \"Speed Is Invalid\"\n                        databank.setFloatValue(\"navigator_eta_h\", 0)\n                        databank.setFloatValue(\"navigator_eta_m\", 0)\n                        databank.setFloatValue(\"navigator_eta_s\", 0)\n                        speed_inserted = false\n                    else\n                        local time_min = (su_num*200/speed_num*60)\n                        local time_h   = (time_min/60)\n                        local time_m   = (time_h - math.floor(time_h))*60\n                        local time_s   = (time_m - math.floor(time_m))*60\n                        time_to_go = math.floor(time_h) ..\" h \".. math.floor(time_m) ..\" m \".. math.floor(time_s) ..\" s\"\n                        databank.setFloatValue(\"navigator_eta_h\", math.floor(time_h))\n                        databank.setFloatValue(\"navigator_eta_m\", math.floor(time_m))\n                        databank.setFloatValue(\"navigator_eta_s\", math.floor(time_s))\n                        speed_inserted = true\n                    end\n                elseif (su_distance_inserted == false and (keypad_input_su == \" \" or keypad_input_su == \"Distance Invalid\") and keypad_input_speed == \" \") then\n                    keypad_input_su = \"Distance Invalid\"\n                    databank.setFloatValue(\"navigator_distance\", \"n/a\")\n                    screen.resetContent(IDdata_monitor, su_distance_time())\n                elseif (su_distance_inserted == false and keypad_input_su ~= \" \" and keypad_input_speed == \" \") then\n                    databank.setFloatValue(\"navigator_distance\", keypad_input_su)\n                    su_distance_inserted = true\n                    su_tick = \" \"\n                    speed_tick = \" > \"\n                end\n            end\n           -- ENT From\n            if screenState == 2 then\n                if (from_inserted == false and keypad_input_from == \"\") then\n                    local myPos = vec3(core.getConstructWorldPos())\n                    keypad_input_from = \"PPOS\"\n                    databank.setStringValue(\"navigator_from\", \"PPOS\")\n                    databank.setStringValue(\"from\", \"PPOS\")\n                    from_coordinates = tostring(myPos)\n                    databank.setStringValue(\"navigator_from_coordinates\", tostring(myPos))\n                    from_inserted = true\n                    status_FM = [[FM]]\n                    FROM_tick = \" \"\n                    WPADD_tick = \" > \"\n                elseif (from_inserted == false and keypad_input_from ~= \"\") then\n                    from_coordinates_check = false\n                    for i = 1, #planet_data do\n                        if planet_data[i].id == keypad_input_from then\n                            databank.setStringValue(\"navigator_from\", planet_data[i].name)\n                            databank.setIntValue(\"navigator_from_planet_radius\", planet_data[i].radius)\n                            databank.setStringValue(\"from\", keypad_input_from)\n                            from_inserted = true\n                            status_FM = [[FM]]\n                            from_coordinates = vec3(planet_data[i].coord)\n                            databank.setStringValue(\"navigator_from_coordinates\", tostring(from_coordinates))\n                            from_coordinates_check = true\n                            break\n                        elseif databank.hasKey(keypad_input_from) == 1 then\n                            local wp_check = keypad_input_from\n                            for x = 1, #wp_list do \n                                if wp_list[x].id == wp_check then\n                                    local wp_id = wp_list[x].wp\n                                    wp_id_rename = wp_id\n                                    keypad_input_from = databank.getStringValue(wp_id)\n                                    keypad_input_from_coord = wp_id ..\"_coord\"\n                                    databank.setStringValue(\"navigator_from\", keypad_input_from)\n                                    databank.setStringValue(\"from\", keypad_input_from)\n                                    databank.setIntValue(\"navigator_from_planet_radius\", 1)\n                                    from_inserted = true\n                                    status_FM = [[FM]]\n                                    from_coordinates = vec3FromStr(databank.getStringValue(keypad_input_from_coord))\n                                    databank.setStringValue(\"navigator_from_coordinates\", tostring(from_coordinates))\n                                    from_coordinates_check = true\n                                    FROM_tick = \" \"\n                                    WPADD_tick = \" > \"\n                                    break\n                                end\n                            end\n                        elseif from_coordinates_check == false then\n                            databank.setStringValue(\"navigator_from\", \"no From\")\n                            from_inserted = false\n                            status_FM = [[ ]]\n                            from_coordinates = \"Not Present In Databank\"\n                            databank.setStringValue(\"navigator_from_coordinates\", \"n/a\")\n                            FROM_tick = \" > \"\n                            WPADD_tick = \" \"\n                        end\n                    end\n                end\n            end\n           -- ENT Destination\n            if screenState == 3 then\n                if (destination_inserted == false and keypad_input_dest ~= \"\") then\n                    destination_check = false\n                    for i = 1, #planet_data do\n                        if planet_data[i].id == keypad_input_dest then\n                            databank.setStringValue(\"navigator_target_destination\", planet_data[i].name)\n                            databank.setStringValue(\"to\", keypad_input_dest)\n                            databank.setIntValue(\"navigator_target_planet_radius\", planet_data[i].radius)\n                            destination_inserted = true\n                            status_TO = [[TO]]\n                            local myPos = vec3(core.getConstructWorldPos())\n                            destination_coord = vec3(planet_data[i].coord)\n                            databank.setStringValue(\"navigator_coordinates\", tostring(destination_coord))\n                            set_coordinates(planet_data[i])\n                            distance_to_go = math.floor(((vec3(planet_data[i].coord) - myPos):len())/1000/200*100)/100\n                            distance_to_go_warp = distance_to_go\n                            databank.setFloatValue(\"navigator_distance\", distance_to_go)\n                            databank.setFloatValue(\"navigator_eta_h\", 0)\n                            databank.setFloatValue(\"navigator_eta_m\", 0)\n                            databank.setFloatValue(\"navigator_eta_s\", 0)\n                            destination_check = true\n                            break\n                        elseif databank.hasKey(keypad_input_dest) == 1 then\n                            local wp_check = keypad_input_dest\n                            for x = 1, #wp_list do \n                                if wp_list[x].id == wp_check then\n                                    local wp_id = wp_list[x].wp\n                                    keypad_input_dest = databank.getStringValue(wp_id)\n                                    keypad_input_dest_coord = wp_id ..\"_coord\"\n                                    databank.setStringValue(\"navigator_target_destination\", keypad_input_dest)\n                                    databank.setStringValue(\"to\", keypad_input_dest)\n                                    databank.setIntValue(\"navigator_target_planet_radius\", 1)\n                                    destination_inserted = true\n                                    status_TO = [[TO]]\n                                    local myPos = vec3(core.getConstructWorldPos())\n                                    destination_coord = vec3FromStr(databank.getStringValue(keypad_input_dest_coord))\n                                    databank.setStringValue(\"navigator_coordinates\", tostring(destination_coord))\n                                    set_wp_coordinates(databank.getStringValue(keypad_input_dest_coord))\n                                    distance_to_go = math.floor(((destination_coord - myPos):len())/1000/200*100)/100\n                                    distance_to_go_warp = distance_to_go\n                                    databank.setFloatValue(\"navigator_distance\", distance_to_go)\n                                    databank.setFloatValue(\"navigator_eta_h\", 0)\n                                    databank.setFloatValue(\"navigator_eta_m\", 0)\n                                    databank.setFloatValue(\"navigator_eta_s\", 0)\n                                    destination_check = true\n                                    break\n                                else\n                                    databank.setStringValue(\"navigator_target_destination\", \"no Dest.\")\n                                    destination_inserted = false\n                                    status_TO = [[ ]]\n                                    destination_coord = \"Not Present In Databank\"\n                                    databank.setStringValue(\"navigator_coordinates\", \"n/a\")\n                                end\n                            end\n                        elseif (destination_check == false) then\n                            databank.setStringValue(\"navigator_target_destination\", \"no Dest.\")\n                            destination_inserted = false\n                            status_TO = [[ ]]\n                            destination_coord = \"Not Present In Databank\"\n                            databank.setStringValue(\"navigator_coordinates\", \"n/a\")\n                        end\n                    end\n                end\n            end\n           -- ENT Target Pe Altitude\n            if screenState == 4 then\n                if (target_pe_altitude_inserted == false and keypad_input_pe_target_alt ~= \"\") then\n                    if tonumber(keypad_input_pe_target_alt) == nil then\n                        keypad_input_pe_target_alt = \"Invalid Input\"\n                        target_pe_altitude_inserted = true\n                        status_TA = [[TA]]\n                    elseif tonumber(keypad_input_pe_target_alt) < 10000 then\n                        target_alt_warning = \"Warning Altitude Too Low\"\n                        target_pe_altitude_inserted = true\n                        status_TA = [[TA]]\n                    elseif tonumber(keypad_input_pe_target_alt) >= 10000 then\n                        databank.setFloatValue(\"navigator_pe_target_altitude\", tonumber(keypad_input_pe_target_alt))\n                        target_pe_altitude_inserted = true\n                        status_TA = [[TA]]\n                        stored_pe_target_alt = keypad_input_pe_target_alt\n                        databank.setFloatValue(\"PE_altitude\", math.floor(stored_pe_target_alt))\n                    elseif keypad_input_pe_target_alt == \"Invalid Input\" then\n                        keypad_input_pe_target_alt = \"Invalid Input\"\n                        target_pe_altitude_inserted = true\n                        status_TA = [[TA]]\n                    end\n                else\n                    keypad_input_pe_target_alt = \"Invalid Input\"\n                    target_pe_altitude_inserted = true\n                    status_TA = [[TA]]\n                end\n            end\n           -- ENT Settings\n            if screenState == 9 then        --(Settings Menu)\n                if tick_[1] == \"cyan\" then     --SELECT Ship Settings\n                    screenState = 5\n                    MTOW_tick = \" > \"\n                    autobrake_tick = \" \"\n                elseif tick_[2] == \"cyan\" then --SELECT WP Store\n                    screenState = 7\n                    wp_name_tick = \" > \"\n                    wp_lat_tick = \" \"\n                    wp_lon_tick = \" \"\n                    wp_alt_tick = \" \"\n                elseif tick_[3] == \"cyan\" then  --SELECT WP Sync\n                    screenState = 8\n                    dwn_sync_tick = \" > \"\n                    up_sync_tick = \" \"\n                    sync_result = \"\"\n                    receiving_wp = 0\n                    wp_synced = 0\n                    index_sync = 1\n                    prog_bar = 0\n                    keypad_input_shipid = databank.getStringValue(\"Ship ID\")\n                    shipid_tick = \" \"\n                    shipid_color = \"yellow\"\n                elseif tick_[4] == \"cyan\" then  --SELECT Screen Colors\n                    screenState = 10\n                    tick_color_1 = \" > \"\n                    tick_color_2 = \" \"\n                    tick_color_3 = \" \"\n                    tick_color_4 = \" \"\n                    tick_color_5 = \" \"\n                    keypad_input_color1 = COLORS_Tables_Border\n                    keypad_input_color2 = COLORS_Table_Titles\n                    keypad_input_color3 = COLORS_Tables_Text\n                    keypad_input_color4 = COLORS_Measure_Units\n                    keypad_input_color5 = COLORS_Buttons\n                elseif tick_[5] == \"cyan\" then  --SELECT DMG Rep.\n                    screenState = 11\n                    tick_dmg_1 = \" > \"\n                    tick_dmg_2 = \" \"\n                    tick_dmg_3 = \" \"\n                    tick_dmg_4 = \" \"\n                    dmg_ack_color1 = \"yellow\"\n                    dmg_ack_color2 = \"yellow\"\n                    if databank.getFloatValue(\"DMG Scale\") ~= nil then\n                        keypad_input_dmg1 = databank.getFloatValue(\"DMG Scale\")\n                    else\n                        keypad_input_dmg1 = 3\n                    end\n                    if databank.getFloatValue(\"DMG TV U/D\") ~= nil then\n                        DMG_REP_TOP_VIEW_Up_Down = databank.getFloatValue(\"DMG TV U/D\")\n                    else\n                        DMG_REP_TOP_VIEW_Up_Down = -20 --(Higer value for Up) (Lower for Down)\n                    end\n                    if databank.getFloatValue(\"DMG TV L/R\") ~= nil then\n                        DMG_REP_TOP_VIEW_LH_RH = databank.getFloatValue(\"DMG TV L/R\")\n                    else\n                        DMG_REP_TOP_VIEW_LH_RH = 30 --(Higher value for Right) (Lower for Left)\n                    end\n                    if databank.getFloatValue(\"DMG SV U/D\") ~= nil then\n                        DMG_REP_SIDE_VIEW_Up_Down = databank.getFloatValue(\"DMG SV U/D\")\n                    else\n                        DMG_REP_SIDE_VIEW_Up_Down = 40 --(Higher value for Down) (Lower for Up)\n                    end\n                    if databank.getFloatValue(\"DMG SV L/R\") ~= nil then\n                        DMG_REP_SIDE_VIEW_LH_RH = databank.getFloatValue(\"DMG SV L/R\")\n                    else\n                        DMG_REP_SIDE_VIEW_LH_RH = 100 --(Higer value for Right) (Lower for Left)\n                    end\n                    keypad_input_dmg2 = 1\n                    dmg_factor = keypad_input_dmg2\n                elseif tick_[6] == \"cyan\" then  --SELECT DB Reset\n                    screenState = 12\n                    tick_ = {}\n                    tick_[1] = \" > \"\n                    tick_[2] = \"\"\n                    tick_[3] = \"\"\n                    tick_[4] = \"\"\n                    tick_[5] = \"\"\n                    db_mark_1 = \"✔\"\n                    db_mark_1_TF = true\n                    db_mark_2 = \"✔\"\n                    db_mark_2_TF = true\n                    db_mark_3 = \"✔\"\n                    db_mark_3_TF = true\n                    db_mark_4 = \"✔\"\n                    db_mark_4_TF = true\n                    db_mark_5 = \"✔\"\n                    db_mark_5_TF = true\n                    reset_db_status = databank.getNbKeys()..\" Keys\"\n                    screenStateManager()\n                elseif tick_[10] == \"cyan\" then --SELECT CLR WP Stored\n                    local db_keys = databank.getNbKeys()\n                    for i=1, db_keys do\n                        local wp_id = \"wp\"..i\n                        if databank.getStringValue(wp_id) ~= \"\" then\n                            databank.setStringValue(wp_id, nil)\n                            databank.setStringValue(wp_id..\"_coord\", nil)\n                        end\n                    end\n                    tick_[1] = \"\"\n                    tick_[10] = \"\"\n                    ack_clr_wp = [[red]]\n                end\n            elseif screenState == 5 then    --(Ship Settings)\n                if (MTOW_inserted == false and MTOW_tick == \" > \") then\n                    if (keypad_input_MTOW == \"\") then\n                        keypad_input_MTOW = factory_MTOW/1000\n                        new_MTOW = keypad_input_MTOW\n                        MTOW_inserted = true\n                        databank.setFloatValue(\"navigator_MTOW\", new_MTOW*1000)\n                        MTOW_tick = \" \"\n                        autobrake_tick = \" > \"\n                    else\n                        new_MTOW = tonumber(keypad_input_MTOW)\n                        MTOW_inserted = true\n                        databank.setFloatValue(\"navigator_MTOW\", new_MTOW*1000)\n                        MTOW_tick = \" \"\n                        autobrake_tick = \" > \"\n                    end\n                elseif (MTOW_inserted == true and keypad_input_MTOW ~= \"\" and MTOW_tick == \" > \") then\n                    keypad_input_MTOW = keypad_input_MTOW\n                    MTOW_tick = \" \"\n                    autobrake_tick = \" > \"\n                elseif (autobrake_stops_at_inserted == false and autobrake_tick == \" > \") then\n                    if (keypad_input_autobrake == \"\") then\n                        keypad_input_autobrake = factory_autobrake\n                        autobrake_stops_at_inserted = true\n                        databank.setFloatValue(\"navigator_autobrake\", keypad_input_autobrake)\n                        MTOW_tick = \" > \"\n                        autobrake_tick = \" \"\n                    else\n                        keypad_input_autobrake = tonumber(keypad_input_autobrake)\n                        autobrake_stops_at_inserted = true\n                        databank.setFloatValue(\"navigator_autobrake\", keypad_input_autobrake)\n                        MTOW_tick = \" > \"\n                        autobrake_tick = \" \"\n                    end\n                elseif (autobrake_stops_at_inserted == true and autobrake_tick == \" > \") then\n                    keypad_input_autobrake = keypad_input_autobrake\n                    MTOW_tick = \" > \"\n                    autobrake_tick = \" \"\n                end\n            elseif screenState == 8 then    --(WP Sync)\n                msg_counter = 0\n                if (shipid_tick == \" > \" and keypad_input_shipid ~= \"\") then\n                    ship_id = keypad_input_shipid\n                    databank.setStringValue(\"Ship ID\", ship_id)\n                    shipid_color = \"yellow\"\n                    screen.resetContent(status_table, data_status())\n                end\n                if (dwn_sync_tick == \" > \" and keys_number > 0 and up_sync_tick == \" \") then\n                    sync_data()\n                elseif (keys_number == 0) then\n                    prog_bar = 0\n                    sync_result = \"No Data To Sync\"\n                end\n                if (up_sync_tick == \" > \") then\n                    ship_id = databank.getStringValue(\"Ship ID\")\n                    if ship_id ~= \"\" then\n                        emitter.send(\"ShipRqstId\", ship_id)\n                    else\n                        sync_result = [[<span class=\"red\">No Ship ID</span>]]\n                    end\n                end\n            elseif screenState == 10 then   --(Screen Colors)\n                if tick_color_1 == \" > \" then\n                    if (keypad_input_color1:find(\"%a\") ~= nil or keypad_input_color1:find(\"(%d+),(%d+),(%d+)\") == nil) then\n                        keypad_input_color1 = \"Insert RGB\"\n                    elseif keypad_input_color1:find(\"(0+),(0+),(0+)\") ~= nil then\n                        keypad_input_color1 = \"Black Not An Option\"\n                    elseif keypad_input_color1 ~= \"\" then\n                        COLORS_Tables_Border = keypad_input_color1\n                        databank.setStringValue(\"Borders Color\", COLORS_Tables_Border)\n                    end\n                elseif tick_color_2 == \" > \" then\n                    if (keypad_input_color2:find(\"%a\") ~= nil or keypad_input_color2:find(\"(%d+),(%d+),(%d+)\") == nil) then\n                        keypad_input_color2 = \"Insert RGB\"\n                    elseif keypad_input_color2:find(\"(0+),(0+),(0+)\") ~= nil then\n                        keypad_input_color2 = \"Black Not An Option\"\n                    elseif keypad_input_color2 ~= \"\" then\n                        COLORS_Table_Titles = keypad_input_color2\n                        databank.setStringValue(\"Titles Color\", COLORS_Table_Titles)\n                    end\n                elseif tick_color_3 == \" > \" then\n                    if (keypad_input_color3:find(\"%a\") ~= nil or keypad_input_color3:find(\"(%d+),(%d+),(%d+)\") == nil) then\n                        keypad_input_color3 = \"Insert RGB\"\n                    elseif keypad_input_color3:find(\"(0+),(0+),(0+)\") ~= nil then\n                        keypad_input_color3 = \"Black Not An Option\"\n                    elseif keypad_input_color3 ~= \"\" then\n                        COLORS_Tables_Text = keypad_input_color3\n                        databank.setStringValue(\"Text Color\", COLORS_Tables_Text)\n                    end\n                elseif tick_color_4 == \" > \" then\n                    if (keypad_input_color4:find(\"%a\") ~= nil or keypad_input_color4:find(\"(%d+),(%d+),(%d+)\") == nil) then\n                        keypad_input_color4 = \"Insert RGB\"\n                    elseif keypad_input_color4:find(\"(0+),(0+),(0+)\") ~= nil then\n                        keypad_input_color4 = \"Black Not An Option\"\n                    elseif keypad_input_color4 ~= \"\" then\n                        COLORS_Measure_Units = keypad_input_color4\n                        databank.setStringValue(\"Units Color\", COLORS_Measure_Units)\n                        keypad_input_color4 = [[<span style=\"color: rgb(]]..COLORS_Measure_Units..[[\">]]..COLORS_Measure_Units..[[</span>]]\n                    end\n                elseif tick_color_5 == \" > \" then\n                    if (keypad_input_color5:find(\"%a\") ~= nil or keypad_input_color5:find(\"(%d+),(%d+),(%d+)\") == nil) then\n                        keypad_input_color5 = \"Insert RGB\"\n                    elseif keypad_input_color5:find(\"(0+),(0+),(0+)\") ~= nil then\n                        keypad_input_color5 = \"Black Not An Option\"\n                    elseif keypad_input_color5 ~= \"\" then\n                        COLORS_Buttons = keypad_input_color5\n                        databank.setStringValue(\"Buttons Color\", COLORS_Buttons)\n                        keypad_input_color5 = [[<span style=\"color: rgb(]]..COLORS_Buttons..[[\">Restart To Apply</span>]]\n                    end\n                end\n            elseif screenState == 11 then   --(DMG Rep.)\n                if tick_dmg_1 == \" > \" then\n                    if tonumber(keypad_input_dmg1) ~= nil then\n                        dmg_ack_color1 = \"yellow\"\n                        databank.setFloatValue(\"DMG Scale\", keypad_input_dmg1)\n                    else\n                        keypad_input_dmg1 = 3\n                        dmg_ack_color1 = \"yellow\"\n                    end\n                elseif tick_dmg_3 == \" > \" then\n                    if (tonumber(keypad_input_dmg2) ~= nil and tonumber(keypad_input_dmg2) > 0)then\n                        dmg_factor = keypad_input_dmg2\n                        dmg_ack_color2 = \"yellow\"\n                    else\n                        keypad_input_dmg2 = 1\n                        dmg_factor = keypad_input_dmg2\n                        dmg_ack_color2 = \"yellow\"\n                    end\n                end\n            elseif screenState == 12 then   --(DB reset)\n                if tick_[1] == \" > \" then\n                    if db_mark_1 == \"✔\" then db_mark_1 = \"\" db_mark_1_TF = false\n                    else db_mark_1 = \"✔\" db_mark_1_TF = true end\n                elseif tick_[2] == \" > \" then\n                    if db_mark_2 == \"✔\" then db_mark_2 = \"\" db_mark_2_TF = false\n                    else db_mark_2 = \"✔\" db_mark_2_TF = true end\n                elseif tick_[3] == \" > \" then\n                    if db_mark_3 == \"✔\" then db_mark_3 = \"\" db_mark_3_TF = false\n                    else db_mark_3 = \"✔\" db_mark_3_TF = true end\n                elseif tick_[4] == \" > \" then\n                    if db_mark_4 == \"✔\" then db_mark_4 = \"\" db_mark_4_TF = false\n                    else db_mark_4 = \"✔\" db_mark_4_TF = true end\n                elseif tick_[5] == \" > \" then\n                    if db_mark_5 == \"✔\" then db_mark_5 = \"\" db_mark_5_TF = false\n                    else db_mark_5 = \"✔\" db_mark_5_TF = true end\n                end\n            end\n        end\n\n    --CLR BUTTON\n        function clr_button()\n            -- CLR Time Calculator\n                if screenState == 1 then\n                    if (su_distance_inserted == true and keypad_input_su ~= \" \" and keypad_input_speed ~= \" \") then\n                        keypad_input_speed = nil\n                        databank.setFloatValue(\"navigator_speed\", \"0\")\n                        speed_inserted = false\n                        time_to_go = \" \"\n                        databank.setFloatValue(\"navigator_eta_h\", 0)\n                        databank.setFloatValue(\"navigator_eta_m\", 0)\n                        databank.setFloatValue(\"navigator_eta_s\", 0)\n                    elseif ( su_distance_inserted == true and keypad_input_su ~= \" \" and keypad_input_speed == \" \") then\n                        keypad_input_su = nil\n                        databank.setStringValue(\"navigator_distance\", \"n/a\")\n                        su_distance_inserted = false\n                        speed_inserted = false\n                        databank.setStringValue(\"navigator_speed\", \"0\")\n                        databank.setFloatValue(\"navigator_eta_h\", 0)\n                        databank.setFloatValue(\"navigator_eta_m\", 0)\n                        databank.setFloatValue(\"navigator_eta_s\", 0)\n                    elseif ( su_distance_inserted == false and keypad_input_su ~= \" \" and keypad_input_speed == \" \") then\n                        keypad_input_su = nil\n                        databank.setStringValue(\"navigator_distance\", \"n/a\")\n                        databank.setFloatValue(\"navigator_eta_h\", 0)\n                        databank.setFloatValue(\"navigator_eta_m\", 0)\n                        databank.setFloatValue(\"navigator_eta_s\", 0)\n                    end\n                end\n            -- CLR From\n                if screenState == 2 then\n                    if (keypad_input_from ~= \"\" or WPADD_tick == \" > \")then\n                        keypad_input_from = nil\n                        databank.setStringValue(\"navigator_from\", \"no From\")\n                        from_coordinates = \"\"\n                        databank.setStringValue(\"navigator_from_coordinates\", \"n/a\")\n                        from_inserted = false\n                        status_FM = [[ ]]\n                        databank.setIntValue(\"navigator_from_planet_radius\", 0)\n                        wpname_inserted = false\n                        FROM_tick = \" > \"\n                        WPADD_tick = \" \"\n                        stored = \"\"\n                    end\n                end\n            -- CLR Distance To Coordinates\n                if screenState == 3 then\n                    if (keypad_input_dest ~= \"\") then\n                        keypad_input_dest = nil\n                        databank.setStringValue(\"navigator_target_destination\", \"no Dest.\")\n                        destination_inserted = false\n                        status_TO = [[ ]]\n                        destination_coord = nil\n                        databank.setStringValue(\"navigator_coordinates\", \"n/a\")\n                        distance_to_go = \" \"\n                        databank.setIntValue(\"navigator_target_planet_radius\", 0)\n                    end\n                end\n            -- CLR Target Pe Altitude\n                if screenState == 4 then\n                    if (keypad_input_pe_target_alt ~= \"\") then\n                        keypad_input_pe_target_alt = nil\n                        target_pe_altitude_inserted = false\n                        status_TA = [[ ]]\n                        target_alt_warning = \"\"\n                    end\n                end\n            -- CLR Settings\n                if screenState == 5 then        --(Ship Settings)\n                    if ((MTOW_inserted == true or keypad_input_MTOW ~= \"\") and MTOW_tick == \" > \") then\n                        keypad_input_MTOW = \"\"\n                        new_MTOW = factory_MTOW/1000\n                        MTOW_inserted = false\n                        databank.setFloatValue(\"navigator_MTOW\", factory_MTOW)\n                        MTOW_tick = \" > \"\n                        autobrake_tick = \" \"\n                    elseif ((autobrake_stops_at_inserted == true or keypad_input_autobrake ~= \"\") and autobrake_tick == \" > \") then\n                        keypad_input_autobrake = \"\"\n                        autobrake_stops_at_inserted = false\n                        databank.setFloatValue(\"navigator_autobrake\", factory_autobrake)\n                        MTOW_tick = \" \"\n                        autobrake_tick = \" > \"\n                    end\n                elseif screenState == 7 then    --(WP Store)\n                    if wp_name_tick == \" > \" then\n                        keypad_input_wp_name = \"\"\n                    elseif wp_lat_tick == \" > \" then\n                        keypad_input_wp_lat = \"\"\n                    elseif wp_lon_tick == \" > \" then\n                        keypad_input_wp_lon = \"\"\n                    elseif wp_alt_tick == \" > \" then\n                        keypad_input_wp_alt = \"\"\n                    end\n                elseif screenState == 8 then    --(WP Sync)\n                    if shipid_tick == \" > \" then\n                        keypad_input_shipid = \"\"\n                        ship_id = keypad_input_shipid\n                        databank.setStringValue(\"Ship ID\", ship_id)\n                        screen.resetContent(status_table, data_status())\n                    end\n                elseif screenState == 10 then   --(Screen Colors)\n                    if tick_color_1 == \" > \" then\n                        keypad_input_color1 = \"\"\n                    elseif tick_color_2 == \" > \" then\n                        keypad_input_color2 = \"\"\n                    elseif tick_color_3 == \" > \" then\n                        keypad_input_color3 = \"\"\n                    elseif tick_color_4 == \" > \" then\n                        keypad_input_color4 = \"\"\n                    elseif tick_color_5 == \" > \" then\n                        keypad_input_color5 = \"\"\n                    end\n                elseif screenState == 11 then   --(DMG rep.)\n                    if tick_dmg_1 == \" > \" then\n                        keypad_input_dmg1 = \"\"\n                        dmg_ack_color1 = \"cyan\"\n                    elseif tick_dmg_3 == \" > \" then\n                        keypad_input_dmg2 = \"\"\n                        dmg_ack_color2 = \"cyan\"\n                    end\n                elseif screenState == 12 then   --(DB reset)\n                    databank_clean(db_mark_1_TF, db_mark_2_TF, db_mark_3_TF, db_mark_4_TF, db_mark_5_TF)\n                end\n        end\n    --HTML BUTTON PRESS\n        function button_press(x, y)\n            if screenState == 11 then\n                if (x > 0.66 and x < 0.76 and y > 0.27 and y < 0.35) then --(+)\n                    keypad_input_dmg1 = keypad_input_dmg1 + dmg_factor\n                    databank.setFloatValue(\"DMG Scale\", keypad_input_dmg1)\n                    dmg_ack_color1 = \"yellow\"\n                    screenStateManager()\n                elseif (x > 0.86 and x < 0.96 and y > 0.27 and y < 0.35) then --(-)\n                    keypad_input_dmg1 = keypad_input_dmg1 - dmg_factor\n                    databank.setFloatValue(\"DMG Scale\", keypad_input_dmg1)\n                    dmg_ack_color1 = \"yellow\"\n                    screenStateManager()\n                elseif (x > 0.76 and x < 0.86 and y > 0.35 and y < 0.44) then --(up)\n                    if tick_dmg_2 == \" > \" then\n                        DMG_REP_TOP_VIEW_Up_Down = DMG_REP_TOP_VIEW_Up_Down + dmg_factor\n                        databank.setFloatValue(\"DMG TV U/D\", DMG_REP_TOP_VIEW_Up_Down)\n                    elseif tick_dmg_4 == \" > \" then\n                        DMG_REP_SIDE_VIEW_Up_Down = DMG_REP_SIDE_VIEW_Up_Down - dmg_factor\n                        databank.setFloatValue(\"DMG SV U/D\", DMG_REP_SIDE_VIEW_Up_Down)\n                    end\n                elseif (x > 0.76 and x < 0.86 and y > 0.52 and y < 0.60) then --(dwn)\n                    if tick_dmg_2 == \" > \" then\n                        DMG_REP_TOP_VIEW_Up_Down = DMG_REP_TOP_VIEW_Up_Down - dmg_factor\n                        databank.setFloatValue(\"DMG TV U/D\", DMG_REP_TOP_VIEW_Up_Down)\n                    elseif tick_dmg_4 == \" > \" then\n                        DMG_REP_SIDE_VIEW_Up_Down = DMG_REP_SIDE_VIEW_Up_Down + dmg_factor\n                        databank.setFloatValue(\"DMG SV U/D\", DMG_REP_SIDE_VIEW_Up_Down)\n                    end\n                elseif (x > 0.66 and x < 0.76 and y > 0.44 and y < 0.52) then --(lh)\n                    if tick_dmg_2 == \" > \" then\n                        DMG_REP_TOP_VIEW_LH_RH = DMG_REP_TOP_VIEW_LH_RH - dmg_factor\n                        databank.setFloatValue(\"DMG TV L/R\", DMG_REP_TOP_VIEW_LH_RH)\n                    elseif tick_dmg_4 == \" > \" then\n                        DMG_REP_SIDE_VIEW_LH_RH = DMG_REP_SIDE_VIEW_LH_RH - dmg_factor\n                        databank.setFloatValue(\"DMG SV L/R\", DMG_REP_SIDE_VIEW_LH_RH)\n                    end\n                elseif (x > 0.86 and x < 0.96 and y > 0.44 and y < 0.52) then --(rh)\n                    if tick_dmg_2 == \" > \" then\n                        DMG_REP_TOP_VIEW_LH_RH = DMG_REP_TOP_VIEW_LH_RH + dmg_factor\n                        databank.setFloatValue(\"DMG TV L/R\", DMG_REP_TOP_VIEW_LH_RH)\n                    elseif tick_dmg_4 == \" > \" then\n                        DMG_REP_SIDE_VIEW_LH_RH = DMG_REP_SIDE_VIEW_LH_RH + dmg_factor\n                        databank.setFloatValue(\"DMG SV L/R\", DMG_REP_SIDE_VIEW_LH_RH)\n                    end\n                end\n            end\n        end\n\n   --SCREENS\n    --STORED WAYPOINTS          (screenState = 0)\n        function stored_waypoints_1()\n\n         --ORDER LIST\n            local db_keys = databank.getNbKeys()\n\n            order_list = {}\n            for i=1, db_keys do\n                local dbkey = \"wp\"..i\n                local value = databank.getStringValue(dbkey)\n                if value ~= \"\" then\n                    table.insert(order_list, value)\n                    table.sort(order_list)\n                end\n            end\n\n            wp_list = {}\n            wp_counter = 0\n            for i=1, #order_list do\n                local dbkeysort = order_list[i]\n                for x=1, db_keys do\n                    local key = \"wp\"..x\n                    local v = databank.getStringValue(key)\n                    if dbkeysort == v then\n                        wp_counter = wp_counter + 1\n                        local id = \"wp\"..wp_counter\n                        local dbkey = key\n                        wp_list[wp_counter]={ [\"id\"]=id, [\"wp\"]=key}\n                        break\n                    end\n                end\n            end\n\n            wp_pages = generating_wp_pages()\n            wp_page_index = wp_page_index\n\n            local stored_waypoints_1_table = css_html()\n            stored_waypoints_1_table = stored_waypoints_1_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"center yellow\">STORED WP <span class=\"f_right\">&#x21D1 Page ]]..wp_page_index..[[/]]..wp_pages..[[ &#x21D3</span></td></tr>\n                    ]]\n\n            local index = (wp_page_index*10)-9\n            local x = 0\n            for i=index, (index+4) do\n                if i <= wp_counter then\n                    wp_id_l = wp_list[i].wp\n                else\n                    wp_id_l = \"\"\n                end\n                if (i+5) <= wp_counter then\n                    wp_id_r = wp_list[i+5].wp\n                else\n                    wp_id_r = \"\"\n                end\n                x = x + 1\n                local tick_l = tick_[x]\n                local tick_r = tick_[x+5]\n                wp_id_l = databank.getStringValue(wp_id_l)\n                wp_id_r = databank.getStringValue(wp_id_r)\n\n                stored_waypoints_1_table = stored_waypoints_1_table..[[\n                    <tr height=\"50vh\"><td class=\"yellow\" width=\"45vw\">]]..i..[[</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_l..[[\">]].. wp_id_l ..[[</span></td><td class=\"yellow\" width=\"45vw\">]]..(i+5)..[[</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_r..[[\">]].. wp_id_r ..[[</span></td></tr>\n                    ]]\n            end\n            stored_waypoints_1_table = stored_waypoints_1_table..[[</table>]]\n            IDdata_monitor = screen.addContent(35, 20, stored_waypoints_1_table)\n        end\n\n    --ATLAS LIST                (screenState = 6)\n        function atlas_list_page()\n\n            atlas_list = {}\n            atlas_pages = 0\n            atlas_counter = 0\n            for i=1, #planet_data do\n                atlas_counter = atlas_counter + 1\n                local name = planet_data[i].name\n                table.insert(atlas_list, name)\n                table.sort(atlas_list)\n            end\n\n            atlas_pages = math.ceil(atlas_counter/10)\n            atlas_page_index = atlas_page_index\n\n            local atlas_list_table = css_html()\n            atlas_list_table = atlas_list_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"center yellow\">ATLAS <span class=\"f_right\">&#x21D1 Page ]]..atlas_page_index..[[/]]..atlas_pages..[[ &#x21D3</span></td></tr>\n                    ]]\n\n            local index = (atlas_page_index*10)-9\n            local x = 0\n            for i=index, (index+4) do\n                if i <= atlas_counter then\n                    atlas_id_l = atlas_list[i]\n                else\n                    atlas_id_l = \"\"\n                end\n                if (i+5) <= atlas_counter then\n                    atlas_id_r = atlas_list[i+5]\n                else\n                    atlas_id_r = \"\"\n                end\n                x = x + 1\n                local tick_l = tick_[x]\n                local tick_r = tick_[x+5]\n\n                atlas_list_table = atlas_list_table..[[\n                    <tr height=\"50vh\"><td class=\"yellow\" width=\"45vw\">]]..i..[[</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_l..[[\">]].. atlas_id_l ..[[</span></td><td class=\"yellow\" width=\"45vw\">]]..(i+5)..[[</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_r..[[\">]].. atlas_id_r ..[[</span></td></tr>\n                    ]]\n            end\n            atlas_list_table = atlas_list_table..[[</table>]]\n            IDdata_monitor = screen.addContent(35, 20, atlas_list_table)\n        end\n\n    --SU DISTANCE TIME PAGE     (screenState = 1)\n        function su_distance_time()\n\n            if su_distance_inserted == nil then\n                su_distance_inserted = false\n            end\n\n            if speed_inserted == nil then\n                speed_inserted = false\n            end\n\n            if distance_to_go ~= nil then\n                if distance_to_go ~= \" \" then\n                keypad_input_su = distance_to_go\n                databank.setFloatValue(\"navigator_distance\", keypad_input_su)\n                su_distance_inserted = true\n                su_tick = \" \"\n                speed_tick = \" > \"\n                end\n            end\n\n            if keypad_input_su == nil then\n                keypad_input_su = \" \"\n                su_tick = \" > \"\n                speed_tick = \" \"\n            end\n\n            if keypad_input_speed == nil then \n                keypad_input_speed = \" \"\n            end\n\n            if time_to_go == nil then \n                time_to_go = \" \"\n            end\n\n            if (keypad_input_su == \" \" or keypad_input_su == \"Distance Invalid\") then\n                warp_distance = 0\n            else\n                warp_distance = keypad_input_su\n            end\n\n            local su_distance_time_table = css_html()\n            su_distance_time_table = su_distance_time_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td width=\"30vw\"></td><td class=\"yellow\" colspan=\"2\">Insert The Distance</td></tr>\n                    <tr height=\"50vh\"><td>]].. su_tick ..[[</td><td  colspan=\"2\">]].. keypad_input_su ..[[&nbsp<span class=\"cyan\">Su</span></td></tr>\n                    <tr height=\"50vh\"><td></td><td class=\"yellow\" colspan=\"2\">Insert Cruising Speed:</td></tr>\n                    <tr height=\"50vh\"><td>]].. speed_tick ..[[</td><td colspan=\"2\">]].. keypad_input_speed ..[[&nbsp<span class=\"cyan\">Km/h</span></td></tr>\n                    <tr height=\"50vh\"><td></td><td class=\"yellow\">ETA After:</td><td class=\"yellow\">Warp Cells:</td></tr>\n                    <tr height=\"50vh\"><td></td><td>]].. time_to_go ..[[</td><td>]].. math.floor((core.getConstructMass()/1000) * warp_distance * 0.00025) ..[[<span class=\"yellow\">&nbsp Max:&nbsp</span>]].. math.floor((new_MTOW) * warp_distance * 0.00025) ..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, su_distance_time_table)\n        end\n\n    --FROM PAGE                 (screenState = 2)\n        function from()\n            if (databank.getStringValue(\"navigator_from\") ~= \"no From\" and databank.getStringValue(\"navigator_from\") ~= \"PPOS\") then\n                keypad_input_from = databank.getStringValue(\"from\")\n            end\n\n            if from_inserted == nil then\n                from_inserted = false\n                status_FM = [[ ]]\n                FROM_tick = \" > \"\n                keypad_input_wpname = \"\"\n                wpname_inserted = false\n                WPADD_tick = \" \"\n                stored = \"\"\n            end\n\n            if keypad_input_from == nil then\n                keypad_input_from = \"\"\n                from_coordinates = \"\"\n                from_inserted = false\n                status_FM = [[ ]]\n                FROM_tick = \" > \"\n                keypad_input_wpname = \"\"\n                wpname_inserted = false\n                WPADD_tick = \" \"\n                stored = \"\"\n            end\n\n            local load_from_table = css_html()\n            load_from_table = load_from_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td width=\"30vw\"></td><td class=\"yellow\" colspan=\"2\">Insert Departure or ENT</td></tr>\n                    <tr height=\"50vh\"><td>]].. FROM_tick ..[[</td><td colspan=\"2\">]].. keypad_input_from ..[[</td></tr>\n                    <tr height=\"50vh\"><td> </td><td class=\"yellow\" colspan=\"2\">Coordinates:</td></tr>\n                    <tr height=\"50vh\"><td colspan=\"3\" style=\" font-size: 30px\">]].. tostring(from_coordinates) ..[[</td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\"></td><td class=\"yellow\" colspan=\"2\">WP Add / Rename</td></tr>\n                    <tr height=\"50vh\"><td>]].. WPADD_tick ..[[</td><td width=\"285vw\">]].. keypad_input_wpname ..[[</td><td class=\"center\">]].. stored ..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, load_from_table)\n            screen.resetContent(status_table, data_status())\n        end\n\n    --DESTINATION PAGE          (screenState = 3)\n        function distance_to_wp()\n            if (databank.getStringValue(\"navigator_target_destination\") ~= \"no Dest.\") then\n                keypad_input_dest = databank.getStringValue(\"to\")\n                distance_to_go = databank.getFloatValue(\"navigator_distance\")\n                distance_to_go_warp = databank.getFloatValue(\"navigator_distance\")\n            end\n\n            if destination_inserted == nil then\n                destination_inserted = false\n                status_TO = [[ ]]\n            end\n\n            if keypad_input_dest == nil then\n                keypad_input_dest = \"\"\n                destination_coord = \" \"\n                distance_to_go = \" \"\n                distance_to_go_warp = 0\n            else\n                keypad_input_dest = keypad_input_dest\n            end\n\n            local distance_to_wp_table = css_html()\n            distance_to_wp_table = distance_to_wp_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td width=\"30vw\"></td><td class=\"yellow\" colspan=\"2\">Insert Destination</td></tr>\n                    <tr height=\"50vh\"><td> > </td><td colspan=\"2\">]].. keypad_input_dest ..[[</td></tr>\n                    <tr height=\"50vh\"><td></td><td class=\"yellow\">Distance:</td><td class=\"yellow\">Warp Cells:</td></tr>\n                    <tr height=\"50vh\"><td></td><td>]] .. distance_to_go .. [[&nbsp<span class=\"cyan\">Su</span></td><td>]].. math.floor((core.getConstructMass()/1000) * distance_to_go_warp * 0.00025) ..[[<span class=\"yellow\">&nbsp Max:&nbsp</span>]].. math.floor((new_MTOW) * distance_to_go_warp * 0.00025) ..[[</td></tr>\n                    <tr height=\"50vh\"><td></td><td class=\"yellow\" colspan=\"2\">Coordinates:</td></tr>\n                    <tr height=\"50vh\"><td colspan=\"3\" class=\"px25\">]].. tostring(destination_coord) ..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, distance_to_wp_table)\n            screen.resetContent(status_table, data_status())\n        end\n\n    --TARGET PE ALTITUDE PAGE   (screenState = 4)\n        function target_pe_altitude()\n\n            if target_pe_altitude_inserted == nil then\n                target_pe_altitude_inserted = false\n                status_TA = [[ ]]\n            end\n\n            if (databank.getFloatValue(\"PE_altitude\") ~= 0) then\n                stored_pe_target_alt = math.floor(databank.getFloatValue(\"PE_altitude\"))\n            else\n                stored_pe_target_alt = factory_PE_target_altitude\n            end\n\n            if keypad_input_pe_target_alt == nil then\n                keypad_input_pe_target_alt = \"\"\n                target_pe_altitude_inserted = false\n                status_TA = [[ ]]\n            else\n                keypad_input_pe_target_alt = keypad_input_pe_target_alt\n            end\n\n            local load_target_pe_altitude_table = css_html()\n            load_target_pe_altitude_table = load_target_pe_altitude_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td class=\"yellow\">Insert PE Target Altitude</td></tr>\n                    <tr height=\"50vh\"><td>]].. keypad_input_pe_target_alt ..[[&nbsp<span class=\"cyan\">mt</span></td></tr>\n                    <tr height=\"50vh\"><td>]].. target_alt_warning ..[[</td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\">Stored Altitude</td></tr>\n                    <tr height=\"50vh\"><td>]].. stored_pe_target_alt ..[[&nbsp<span class=\"cyan\">mt</span></td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, load_target_pe_altitude_table)\n            screen.resetContent(status_table, data_status())\n        end\n\n    --SETTINGS MENU             (screenState = 9)\n        function settings_menu()\n            local settings_menu_table = css_html()\n            settings_menu_table = settings_menu_table..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"center yellow\">Settings <span class=\"f_right\">&#x21D1 Page 1/1 &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\" width=\"45vw\">1</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_[1]..[[\">Ship Settings</span></td><td class=\"yellow\" width=\"45vw\">6</td><td width=\"270vw\" class=\"white\"><span class=\"]]..tick_[6]..[[\">DB Reset</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\">2</td><td class=\"white\"><span class=\"]]..tick_[2]..[[\">WP Store</span></td><td class=\"yellow\">7</td><td class=\"white\"><span class=\"]]..tick_[7]..[[\">---</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\">3</td><td class=\"white\"><span class=\"]]..tick_[3]..[[\">WP Sync</span></td><td class=\"yellow\">8</td><td class=\"white\"><span class=\"]]..tick_[8]..[[\">---</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\">4</td><td class=\"white\"><span class=\"]]..tick_[4]..[[\">Screen Colors</span></td><td class=\"yellow\">9</td><td class=\"white\"><span class=\"]]..tick_[9]..[[\">---</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"yellow\">5</td><td class=\"white\"><span class=\"]]..tick_[5]..[[\">DMG Rep.</span></td><td class=\"yellow\">10</td><td class=\"]]..ack_clr_wp..[[\"><span class=\"]]..tick_[10]..[[\">CLR ALL WP</span></td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_menu_table)\n        end\n\n    --SETTINGS PAGE 1           (Ship Settings)(screenState = 5)\n        function settings1()\n\n            if keypad_input_MTOW == nil then\n                keypad_input_MTOW = factory_MTOW/1000\n                new_MTOW = factory_MTOW/1000\n                MTOW_inserted = true\n                MTOW_tick = \" > \"\n                autobrake_tick = \" \"\n            end\n\n            if keypad_input_autobrake == nil then\n                keypad_input_autobrake = factory_autobrake\n                autobrake_stops_at_inserted = true\n            end\n\n            local settings_table_1 = css_html()\n            settings_table_1 = settings_table_1..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"3\" class=\"yellow center\">Ship Settings <span class=\"f_right\">&#x21D1 Page 1/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\">]].. MTOW_tick ..[[</td><td width=\"285vw\" class=\"yellow\">MTOW</td><td width=\"315vw\">]].. keypad_input_MTOW ..[[&nbsp<span class=\"cyan\">t</span></td></tr>\n                    <tr height=\"50vh\"><td>]].. autobrake_tick ..[[</td><td class=\"yellow\">Autobrake</td><td>]].. keypad_input_autobrake ..[[&nbsp<span class=\"cyan\">Su</span></td></tr>\n                    <tr height=\"50vh\"><td></td><td></td><td></td></tr>\n                    <tr height=\"50vh\"><td></td><td></td><td></td></tr>\n                    <tr height=\"50vh\"><td></td><td></td><td></td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_1)\n        end\n\n    --SETTINGS PAGE 2           (WP Store)(screenState = 7)\n        function settings2()\n            stored = \"\"\n\n            if databank.getStringValue(\"to\") ~= nil then\n                for i = 1, #planet_data do\n                    if planet_data[i].id == keypad_input_dest then\n                        wp_selected_planet = databank.getStringValue(\"to\")\n                    end\n                end\n            else\n                wp_selected_planet = \"\"\n            end\n\n            if (wp_selected_planet == nil or wp_selected_planet == \"\" or wp_selected_planet == \"Insert Destination\") then\n                wp_selected_planet = \"Insert Destination\"\n                wp_name_tick = \" \"\n                wp_lat_tick = \" \"\n                wp_lon_tick = \" \"\n                wp_alt_tick = \" \"\n                stored = \"\"\n            end\n\n            if (keypad_input_wp_name == nil or keypad_input_wp_name == \"\") then\n                keypad_input_wp_name = \"\"\n                wp_name_inserted = false\n            else\n                wp_name_inserted = true\n            end\n\n            if (tonumber(keypad_input_wp_lat) == nil or keypad_input_wp_lat == \"\") then\n                keypad_input_wp_lat = \"\"\n                wp_lat_inserted = false\n            else\n                wp_lat_inserted = true\n            end\n\n            if (tonumber(keypad_input_wp_lon) == nil or keypad_input_wp_lon == \"\") then\n                keypad_input_wp_lon = \"\"\n                wp_lon_inserted = false\n            else\n                wp_lon_inserted = true\n            end\n\n            if (tonumber(keypad_input_wp_alt) == nil or keypad_input_wp_alt == \"\") then\n                keypad_input_wp_alt = \"\"\n                wp_alt_inserted = false\n            else\n                wp_alt_inserted = true\n            end\n\n            if (wp_name_inserted == true and wp_lat_inserted == true and wp_lon_inserted == true and wp_alt_inserted == true) then\n                wp_coordinated_stored = tostring(coord_converter())\n            else\n                wp_coordinated_stored = \"\"\n            end\n\n            local settings_table_2 = css_html()\n            settings_table_2 = settings_table_2..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td class=\"yellow center\" colspan=\"4\">WP Store <span class=\"f_right\">&#x21D1 Page 2/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td class=\"cyan center\" colspan=\"2\">]].. wp_selected_planet ..[[</td><td width=\"30vw\"></td><td width=\"285vw\" class=\"yellow\">WP Coord</td></tr>\n                    <tr height=\"50vh\"><td width=\"285vw\" colspan=\"2\" class=\"yellow\">WP Name</td><td>]].. wp_lat_tick ..[[</td><td>]].. keypad_input_wp_lat ..[[&nbsp<span class=\"cyan\">Lat</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\">]].. wp_name_tick ..[[</td><td>]].. keypad_input_wp_name ..[[</td><td>]].. wp_lon_tick ..[[</td><td>]].. keypad_input_wp_lon ..[[&nbsp<span class=\"cyan\">Lon</span></td></tr>\n                    <tr height=\"50vh\"><td colspan=\"2\">]].. stored ..[[</td><td>]].. wp_alt_tick ..[[</td><td>]].. keypad_input_wp_alt ..[[&nbsp<span class=\"cyan\">Alt</span></td></tr>\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"px25\">]].. wp_coordinated_stored ..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_2)\n        end\n\n    --SETTINGS PAGE 3           (WP Sync)(screenState = 8)\n        function settings3()\n            local total_key_number = databank.getNbKeys()\n\n            if total_key_number > 0 then\n                local counter = 0\n                for i = 1, total_key_number do\n                    local wp_name = \"wp\"..i\n                    local wp_name = databank.getStringValue(wp_name)\n\n                    if (tostring(wp_name) ~= nil and tostring(wp_name) ~= \"\") then\n                        counter = counter + 1\n                    end\n                    keys_number = counter\n                end\n            else\n                keys_number = 0\n            end\n            if (sync_result == nil or sync_result == \"\") then\n                sync_result = \"\"\n            end\n\n            local settings_table_3 = css_html()\n            settings_table_3 = settings_table_3..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"yellow center\">WP Sync <span class=\"f_right\">&#x21D1 Page 3/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\" class=\"center cyan\">]]..shipid_tick..[[</td><td width=\"285vw\" class=\"center yellow\">Ship ID</td><td width=\"315vw\" colspan=\"2\" class=\"center ]]..shipid_color..[[\">]]..keypad_input_shipid..[[</td></tr>\n                    <tr height=\"50vh\"><td colspan=\"2\" class=\"center yellow\">WP Stored</td><td colspan=\"2\" class=\"center\">]]..keys_number..[[</td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\" class=\"center red\">]]..dwn_sync_tick..[[</td><td width=\"285vw\" class=\"center cyan\"> << Downlink >> </td><td width=\"30vw\" class=\"center red\">]]..up_sync_tick..[[</td><td width=\"285vw\" class=\"center cyan\"> >> Uplink << </td></tr>\n                    <tr height=\"50vh\"><td colspan=\"4\">\n                        <svg width=\"]]..prog_bar..[[\" height=\"10\">\n                            <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" style=\" fill: yellow\"/>\n                        </svg>\n                    </td></tr>\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"center\">]]..sync_result..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_3)\n        end\n\n    --SETTINGS PAGE 4           (Screen Colors)(screenState = 10)\n        function settings4()\n            local settings_table_4 = css_html()\n            settings_table_4 = settings_table_4..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"3\" class=\"center yellow\">Screen Colors <span class=\"f_right\">&#x21D1 Page 4/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\">]]..tick_color_1..[[</td><td width=\"285vw\" class=\"yellow\">Table Borders</td><td width=\"315vw\">]]..keypad_input_color1..[[</td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_color_2..[[</td><td width=\"285vw\" class=\"yellow\">Table Titles</td><td>]]..keypad_input_color2..[[</td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_color_3..[[</td><td class=\"yellow\">Table Text</td><td>]]..keypad_input_color3..[[</td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_color_4..[[</td><td class=\"yellow\">Units/Higlights</td><td>]]..keypad_input_color4..[[</td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_color_5..[[</td><td class=\"yellow\">Buttons</td><td>]]..keypad_input_color5..[[</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_4)\n        end\n\n    --SETTINGS PAGE 5           (DMG Rep.)(screenState = 11)\n        function settings5()\n            local settings_table_5 = css_html()\n            settings_table_5 = settings_table_5..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"5\" class=\"center yellow\">DMG Rep. Position <span class=\"f_right\">&#x21D1 Page 5/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\">]]..tick_dmg_1..[[</td><td width=\"280vw\" class=\"yellow\">Scale</td><td width=\"100vw\" class=\"center\"> + </td><td width=\"100vw\" class=\"center ]]..dmg_ack_color1..[[\">]]..keypad_input_dmg1..[[</td><td width=\"100vw\" class=\"center\"> - </td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_dmg_2..[[</td><td class=\"yellow\">Top View</td><td width=\"100vw\"> </td><td width=\"100vw\" class=\"center\"> ↑ </td><td width=\"100vw\"> </td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_dmg_3..[[</td><td class=\"yellow\">Factor</td><td width=\"100vw\" class=\"center\"> ← </td><td width=\"100vw\" class=\"center ]]..dmg_ack_color2..[[\">]]..keypad_input_dmg2..[[</td><td width=\"100vw\" class=\"center\"> → </td></tr>\n                    <tr height=\"50vh\"><td>]]..tick_dmg_4..[[</td><td class=\"yellow\">Side View</td><td width=\"100vw\"> </td><td width=\"100vw\" class=\"center\"> ↓ </td><td width=\"100vw\"> </td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_5)\n        end\n\n    --SETTINGS PAGE 6           (DB reset)(screenState = 12)\n        function settings6()\n            local settings_table_6 = css_html()\n            settings_table_6 = settings_table_6..[[\n                <table width=\"630vw\">\n                    <tr height=\"50vh\"><td colspan=\"4\" class=\"center yellow\">Databank Reset <span class=\"f_right\">&#x21D1 Page 6/]]..settings_pages..[[ &#x21D3</span></td></tr>\n                    <tr height=\"50vh\"><td width=\"30vw\" class=\"white\">]]..tick_[1]..[[</td><td class=\"yellow vert_al\" width=\"270vw\" rowspan=\"3\">✔=Keep<br>ENT to Change<br>CLR to Execute</td><td width=\"40vw\" class=\"white\">]]..db_mark_1..[[</td><td class=\"yellow\" width=\"290vw\">Stored WP</td></tr>\n                    <tr height=\"50vh\"><td class=\"white\">]]..tick_[2]..[[</td><td class=\"white\">]]..db_mark_2..[[</td><td class=\"yellow\">Ship Settings</td></tr>\n                    <tr height=\"50vh\"><td class=\"white\">]]..tick_[3]..[[</td><td class=\"white\">]]..db_mark_3..[[</td><td class=\"yellow\">Ship ID</td></tr>\n                    <tr height=\"50vh\"><td class=\"white\">]]..tick_[4]..[[</td><td class=\"white\" rowspan=\"2\">]]..reset_db_status..[[</td><td class=\"white\">]]..db_mark_4..[[</td><td class=\"yellow\">Screen Colors</td></tr>\n                    <tr height=\"50vh\"><td class=\"white\">]]..tick_[5]..[[</td><td class=\"white\">]]..db_mark_5..[[</td><td class=\"yellow\">DMG Rep.</td></tr>\n                </table>]]\n            IDdata_monitor = screen.addContent(35, 20, settings_table_6)\n        end\n\n   --SCREEN STATE MANAGER\n    function screenStateManager() -- used to refresh the screen according the screenState\n\n        if screenState == 0 then\n            screen.resetContent(IDdata_monitor, stored_waypoints_1())\n        elseif screenState == 1 then\n            screen.resetContent(IDdata_monitor, su_distance_time())\n        elseif screenState == 2 then\n            screen.resetContent(IDdata_monitor, from())\n        elseif screenState == 3 then\n            screen.resetContent(IDdata_monitor, distance_to_wp())\n        elseif screenState == 4 then\n            screen.resetContent(IDdata_monitor, target_pe_altitude())\n        elseif screenState == 5 then\n            screen.resetContent(IDdata_monitor, settings1())\n        elseif screenState == 6 then\n            screen.resetContent(IDdata_monitor, atlas_list_page())\n        elseif screenState == 7 then\n            screen.resetContent(IDdata_monitor, settings2())\n        elseif screenState == 8 then\n            screen.resetContent(IDdata_monitor, settings3())\n        elseif screenState == 9 then\n            screen.resetContent(IDdata_monitor, settings_menu())\n        elseif screenState == 10 then\n            screen.resetContent(IDdata_monitor, settings4())\n        elseif screenState == 11 then\n            screen.resetContent(IDdata_monitor, settings5())\n        elseif screenState == 12 then\n            screen.resetContent(IDdata_monitor, settings6())\n        end\n    end\n    screenStateManager()\n\n   --SENDING DATA\n    function sync_data()\n        local total_key_number = databank.getNbKeys()\n        if total_key_number > 0 then\n            local counter = 0\n            index_sync = index_sync\n            for i = index_sync, total_key_number do\n                local wp_name = 'wp'..i\n                local wp_name = databank.getStringValue(wp_name)\n                if (tostring(wp_name) ~= nil and tostring(wp_name) ~= \"\") then\n                    counter = counter + 1\n                    local wp_coord = 'wp'..i..'_coord'\n                    local wp_coord = databank.getStringValue(wp_coord)\n                    system.print(\"TRANSMITTING \"..i..\" : \"..wp_name..\", \"..wp_coord)\n\n                    waypoint = {\n                    wp_n = wp_name,\n                    wp_c = wp_coord\n                    }\n                    json_string = json.encode(waypoint, { indent = false })\n                    if counter <= 3 then\n                        wp_synced = wp_synced + 1\n                        emitter.send(\"ShipData\", json_string:gsub(\"\\\"\",\"@@@\"))\n                    else\n                        break\n                    end\n                end\n                sync_result = \"Synced \"..wp_synced..\" WP\"\n                prog_bar = (wp_synced * 624)/keys_number\n                if index_sync <= total_key_number then\n                    delay_sync = 2\n                    index_sync = index_sync + 1\n                    unit.setTimer(\"delay\", 1)\n                end\n            end\n            screenStateManager()\n        end\n    end\n\n   --RECEIVING DATA\n    function reqst_waypoints()\n        emitter.send(\"ShipRqst\")\n        sync_result = [[<span class=\"cyan\"> >> </span>Uplink <span class=\"cyan\"> << </span> ]]..msg_counter..[[/]]..receiving_wp\n    end\n\n    msg_counter = 0\n    function receiving_data()\n        keypad_input_wpname = rcv_msg.wp_n\n        from_coordinates = rcv_msg.wp_c\n        wp_check()\n        screenStateManager()\n    end\n\n   --ATLAS\n    function planet_data()\n        planet_data = {\n            {id = \"madis\",\n            name = \"Madis\",\n            radius = 44300,\n            coord = {x=17465536.000,y=22665536.000,z=-34464.000},\n            system = 0,\n            bodyid = 1\n            },\n            {id = \"alioth\",\n            name = \"Alioth\",\n            radius = 126068,\n            coord = {x=-8.000,y=-8.000,z=-126303.000},\n            system = 0,\n            bodyid = 2\n            },\n            {id = \"thades\",\n            name = \"Thades\",\n            radius = 49000,\n            coord = {x=29165536.000,y=10865536.000,z=65536.000},\n            system = 0,\n            bodyid = 3\n            },\n            {id = \"talemai\",\n            name = \"Talemai\",\n            radius = 57450,\n            coord = {x=-13234464.000,y=55765536.000,z=465536.000},\n            system = 0,\n            bodyid = 4\n            },\n            {id = \"feli\",\n            name = \"Feli\",\n            radius = 60000,\n            coord = {x=-43534464.000,y=22565536.000,z=-48934464.000},\n            system = 0,\n            bodyid = 5\n            },\n            {id = \"sicari\",\n            name = \"Sicari\",\n            radius = 51100,\n            coord = {x=52765536.000,y=27165538.000,z=52065535.000},\n            system = 0,\n            bodyid = 6\n            },\n            {id = \"sinnen\",\n            name = \"Sinnen\",\n            radius = 54950,\n            coord = {x=58665538.000,y=29665535.000,z=58165535.000},\n            system = 0,\n            bodyid = 7\n            },\n            {id = \"teoma\",\n            name = \"Teoma\",\n            radius = 62000,\n            coord = {x=80865538.000,y=54665536.000,z=-934463.940},\n            system = 0,\n            bodyid = 8\n            },\n            {id = \"jago\",\n            name = \"Jago\",\n            radius = 61590,\n            coord = {x=-94134462.000,y=12765534.000,z=-3634464.000},\n            system = 0,\n            bodyid = 9\n            },\n            {id = \"madis_moon_1\",\n            name = \"Madis Moon 1\",\n            radius = 10000,\n            coord = {x=17448118.224,y=22966846.286,z=143078.820},\n            system = 0,\n            bodyid = 10\n            },\n            {id = \"madis_moon_2\",\n            name = \"Madis Moon 2\",\n            radius = 11000,\n            coord = {x=17194626.000,y=22243633.880,z=-214962.810},\n            system = 0,\n            bodyid = 11\n            },\n            {id = \"madis_moon_3\",\n            name = \"Madis Moon 3\",\n            radius = 15005,\n            coord = {x=17520614.000,y=22184730.000,z=-309989.990},\n            system = 0,\n            bodyid = 12\n            },\n            {id = \"alioth_moon_1\",\n            name = \"Alioth Moon 1\",\n            radius = 30000,\n            coord = {x=457933.000,y=-1509011.000,z=115524.000},\n            system = 0,\n            bodyid = 21\n            },\n            {id = \"alioth_moon_4\",\n            name = \"Alioth Moon 4\",\n            radius = 30330,\n            coord = {x=-1692694.000,y=729681.000,z=-411464.000},\n            system = 0,\n            bodyid = 22\n            },\n            {id = \"sanctuary\",\n            name = \"Sanctuary\",\n            radius = 83400,\n            coord = {x=-1404835.000,y=562655.000,z=-285074.000},\n            system = 0,\n            bodyid = 26\n            },\n            {id = \"thades_moon_1\",\n            name = \"Thades Moon 1\",\n            radius = 14002,\n            coord = {x=29214402.000,y=10907080.695,z=433858.200},\n            system = 0,\n            bodyid = 30\n            },\n            {id = \"thades_moon_2\",\n            name = \"Thades Moon 2\",\n            radius = 15000,\n            coord = {x=29404193.000,y=10432768.000,z=19554.131},\n            system = 0,\n            bodyid = 31\n            },\n            {id = \"talemai_moon_2\",\n            name = \"Talemai Moon 2\",\n            radius = 12000,\n            coord = {x=-13503090.000,y=55594325.000,z=769838.640},\n            system = 0,\n            bodyid = 40\n            },\n            {id = \"talemai_moon_3\",\n            name = \"Talemai Moon 3\",\n            radius = 11000,\n            coord = {x=-12800515.000,y=55700259.000,z=325207.840},\n            system = 0,\n            bodyid = 41\n            },\n            {id = \"talemai_moon_1\",\n            name = \"Talemai Moon 1\",\n            radius = 15000,\n            coord = {x=-13058408.000,y=55781856.000,z=740177.760},\n            system = 0,\n            bodyid = 42\n            },\n            {id = \"feli_moon_1\",\n            name = \"Feli Moon 1\",\n            radius = 14000,\n            coord = {x=-43902841.780,y=22261034.700,z=-48862386.000},\n            system = 0,\n            bodyid = 50\n            },\n            {id = \"sinnen_moon_1\",\n            name = \"Sinnen Moon 1\",\n            radius = 17000,\n            coord = {x=58969616.000,y=29797945.000,z=57969449.000},\n            system = 0,\n            bodyid = 70\n            },\n            {id = \"lacobus\",\n            name = \"Lacobus\",\n            radius = 55650,\n            coord = {x=98865536.000,y=-13534464.000,z=-934461.990},\n            system = 0,\n            bodyid = 100\n            },\n            {id = \"lacobus_moon_3\",\n            name = \"Lacobus Moon 3\",\n            radius = 15000,\n            coord = {x=98905288.170,y=-13950921.100,z=-647589.530},\n            system = 0,\n            bodyid = 101\n            },\n            {id = \"lacobus_moon_1\",\n            name = \"Lacobus Moon 1\",\n            radius = 18000,\n            coord = {x=99180968.000,y=-13783862.000,z=-926156.400},\n            system = 0,\n            bodyid = 102\n            },\n            {id = \"lacobus_moon_2\",\n            name = \"Lacobus Moon 2\",\n            radius = 14000,\n            coord = {x=99250052.000,y=-13629215.000,z=-1059341.400},\n            system = 0,\n            bodyid = 103\n            },\n            {id = \"symeon\",\n            name = \"Symeon\",\n            radius = 49050,\n            coord = {x=14165536.000,y=-85634465.000,z=-934464.300},\n            system = 0,\n            bodyid = 110\n            },\n            {id = \"ion\",\n            name = \"Ion\",\n            radius = 44950,\n            coord = {x=2865536.700,y=-99034464.000,z=-934462.020},\n            system = 0,\n            bodyid = 120\n            },\n            {id = \"ion_moon_1\",\n            name = \"Ion Moon 1\",\n            radius = 11000,\n            coord = {x=2472916.800,y=-99133747.000,z=-1133582.800},\n            system = 0,\n            bodyid = 121\n            },\n            {id = \"ion_moon_2\",\n            name = \"Ion Moon 2\",\n            radius = 15000,\n            coord = {x=2995424.500,y=-99275010.000,z=-1378480.700},\n            system = 0,\n            bodyid = 122\n            }\n        }\n    end\n    planet_data()","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"4"},{"code":"if Reset_Screen_Colors == true then\n\tReset_Screen_Colors = false --export\nend\nscreen.clear()\nscreen.deactivate()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"5"},{"code":"delay_sync = delay_sync - 1\n\nif delay_sync == 0 then\n    unit.stopTimer(\"delay\")\n    sync_data()\nend","filter":{"args":[{"value":"delay"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"6"},{"code":"--unit.tick(\"Ship_Id\")\n    ship_id_verified = false\n    unit.stopTimer(\"Ship_Id\")","filter":{"args":[{"value":"Ship_Id"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"7"}],"methods":[],"events":[]}